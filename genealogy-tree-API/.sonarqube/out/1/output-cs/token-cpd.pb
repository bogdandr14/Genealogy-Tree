ù%
ZE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\DbInitializer.cs
	namespace 	
GenealogyTree
 
. 
Data 
{ 
public 

static 
class 
DbInitializer %
{		 
public

 
static

 
void

 

Initialize

 %
(

% &"
GenealogyTreeDbContext

& <
context

= D
)

D E
{ 	
if 
( 
! 
context 
. 
EducationLevels (
.( )
Any) ,
(, -
)- .
). /
{ 
IEnumerable 
< 
EducationLevel *
>* +
educationLevels, ;
=< =
new> A
ListB F
<F G
EducationLevelG U
>U V
(V W
)W X
;X Y
string 
[ 
] 
educationNames '
=( )
Enum* .
.. /
GetNames/ 7
(7 8
typeof8 >
(> ?
Domain? E
.E F
EnumsF K
.K L
EducationLevelL Z
)Z [
)[ \
;\ ]
foreach 
( 
var 
educationName *
in+ -
educationNames. <
)< =
{ 
educationLevels #
=$ %
educationLevels& 5
.5 6
Append6 <
(< =
new= @
EducationLevelA O
{P Q
NameR V
=W X
educationNameY f
.f g
ToUpperg n
(n o
)o p
}q r
)r s
;s t
} 
context 
. 
AddRange  
(  !
educationLevels! 0
)0 1
;1 2
} 
if 
( 
! 
context 
. 
	Religions "
." #
Any# &
(& '
)' (
)( )
{ 
IEnumerable 
< 
Religion $
>$ %
	religions& /
=0 1
new2 5
List6 :
<: ;
Religion; C
>C D
(D E
)E F
;F G
string 
[ 
] 
religionNames &
=' (
Enum) -
.- .
GetNames. 6
(6 7
typeof7 =
(= >
Domain> D
.D E
EnumsE J
.J K
	ReligionsK T
)T U
)U V
;V W
foreach   
(   
var   
religionName   )
in  * ,
religionNames  - :
)  : ;
{!! 
	religions"" 
="" 
	religions""  )
."") *
Append""* 0
(""0 1
new""1 4
Religion""5 =
{""> ?
Name""@ D
=""E F
religionName""G S
}""T U
)""U V
;""V W
}## 
context%% 
.%% 
AddRange%%  
(%%  !
	religions%%! *
)%%* +
;%%+ ,
}&& 
if(( 
((( 
!(( 
context(( 
.(( 
Nationalities(( &
.((& '
Any((' *
(((* +
)((+ ,
)((, -
{)) 
IEnumerable** 
<** 
Nationality** '
>**' (
nationalities**) 6
=**7 8
new**9 <
List**= A
<**A B
Nationality**B M
>**M N
(**N O
)**O P
;**P Q
string,, 
[,, 
],, 
nationalitiesNames,, +
=,,, -
Enum,,. 2
.,,2 3
GetNames,,3 ;
(,,; <
typeof,,< B
(,,B C
Domain,,C I
.,,I J
Enums,,J O
.,,O P
Nationalities,,P ]
),,] ^
),,^ _
;,,_ `
foreach.. 
(.. 
var.. 
nationalityName.. ,
in..- /
nationalitiesNames..0 B
)..B C
{// 
nationalities00 !
=00" #
nationalities00$ 1
.001 2
Append002 8
(008 9
new009 <
Nationality00= H
{00I J
Name00K O
=00P Q
nationalityName00R a
}00b c
)00c d
;00d e
}11 
context33 
.33 
AddRange33  
(33  !
nationalities33! .
)33. /
;33/ 0
}44 
context66 
.66 
SaveChanges66 
(66  
)66  !
;66! "
}77 	
}88 
}99 ®Á
cE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\GenealogyTreeDbContext.cs
	namespace 	
GenealogyTree
 
. 
Data 
{ 
public 

class "
GenealogyTreeDbContext '
:( )
	DbContext* 3
,3 4#
IGenealogyTreeDbContext5 L
{		 
public

 "
GenealogyTreeDbContext

 %
(

% &
DbContextOptions

& 6
<

6 7"
GenealogyTreeDbContext

7 M
>

M N
options

O V
)

V W
:

X Y
base

Z ^
(

^ _
options

_ f
)

f g
{ 	
} 	
public 
virtual 
DbSet 
< 
	Education &
>& '

Educations( 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
virtual 
DbSet 
< 
EducationLevel +
>+ ,
EducationLevels- <
{= >
get? B
;B C
setD G
;G H
}I J
public 
virtual 
DbSet 
< 
Image "
>" #
Images$ *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
virtual 
DbSet 
< 
Location %
>% &
	Locations' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Marriage %
>% &
	Marriages' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Nationality (
>( )
Nationalities* 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
virtual 
DbSet 
< 

Occupation '
>' (
Occupations) 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
public 
virtual 
DbSet 
< 
ParentChild (
>( )
ParentsChildren* 9
{: ;
get< ?
;? @
setA D
;D E
}F G
public 
virtual 
DbSet 
< 
Person #
># $
People% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
Position %
>% &
Position' /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
virtual 
DbSet 
< 
Religion %
>% &
	Religions' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Relative %
>% &
	Relatives' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
virtual 
DbSet 
< 
Request $
>$ %
Requests& .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
virtual 
DbSet 
< 
Tree !
>! "
Trees# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 
DbSet 
< 
User !
>! "
Users# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder"" 
."" 
Entity"" 
<""  
EducationLevel""  .
>"". /
(""/ 0
)""0 1
.## 
HasMany## 
<## 
	Education## !
>##! "
(##" #
el### %
=>##& (
el##) +
.##+ ,

Educations##, 6
)##6 7
.$$ 
WithOne$$ 
($$ 
e$$ 
=>$$ 
e$$ 
.$$ 
EducationLevel$$ -
)$$- .
.%% 
HasForeignKey%% 
(%% 
e%% 
=>%%  "
e%%# $
.%%$ %
EducationLevelId%%% 5
)%%5 6
.&& 
OnDelete&& 
(&& 
DeleteBehavior&& '
.&&' (
NoAction&&( 0
)&&0 1
;&&1 2
modelBuilder)) 
.)) 
Entity)) 
<))  
Image))  %
>))% &
())& '
)))' (
.** 
HasMany** 
<** 
Person** 
>**  
(**  !
i**! "
=>**# %
i**& '
.**' (
People**( .
)**. /
.++ 
WithOne++ 
(++ 
p++ 
=>++ 
p++ 
.++  
Image++  %
)++% &
.,, 
HasForeignKey,, 
(,, 
p,,  
=>,,! #
p,,$ %
.,,% &
ImageId,,& -
),,- .
.-- 
OnDelete-- 
(-- 
DeleteBehavior-- (
.--( )
SetNull--) 0
)--0 1
;--1 2
modelBuilder00 
.00 
Entity00 
<00  
Location00  (
>00( )
(00) *
)00* +
.11 
HasMany11 
<11 
Person11 
>11  
(11  !
l11! "
=>11# %
l11& '
.11' (
PeopleBornHere11( 6
)116 7
.22 
WithOne22 
(22 
p22 
=>22 
p22 
.22  

BirthPlace22  *
)22* +
.33 
HasForeignKey33 
(33 
p33  
=>33! #
p33$ %
.33% &
BirthPlaceId33& 2
)332 3
.44 
OnDelete44 
(44 
DeleteBehavior44 (
.44( )
NoAction44) 1
)441 2
;442 3
modelBuilder77 
.77 
Entity77 
<77  
Location77  (
>77( )
(77) *
)77* +
.88 
HasMany88 
<88 
Person88 
>88  
(88  !
l88! "
=>88# %
l88& '
.88' (
PeopleLivingHere88( 8
)888 9
.99 
WithOne99 
(99 
p99 
=>99 
p99 
.99  
LivingPlace99  +
)99+ ,
.:: 
HasForeignKey:: 
(:: 
p::  
=>::! #
p::$ %
.::% &
LivingPlaceId::& 3
)::3 4
.;; 
OnDelete;; 
(;; 
DeleteBehavior;; (
.;;( )
NoAction;;) 1
);;1 2
;;;2 3
modelBuilder>> 
.>> 
Entity>> 
<>>  
Nationality>>  +
>>>+ ,
(>>, -
)>>- .
.?? 
HasMany?? 
<?? 
Person?? 
>?? 
(??  
n??  !
=>??" $
n??% &
.??& '
People??' -
)??- .
.@@ 
WithOne@@ 
(@@ 
p@@ 
=>@@ 
p@@ 
.@@ 
Nationality@@ *
)@@* +
.AA 
HasForeignKeyAA 
(AA 
pAA 
=>AA  "
pAA# $
.AA$ %
NationalityIdAA% 2
)AA2 3
.BB 
OnDeleteBB 
(BB 
DeleteBehaviorBB '
.BB' (
NoActionBB( 0
)BB0 1
;BB1 2
modelBuilderEE 
.EE 
EntityEE 
<EE  
PersonEE  &
>EE& '
(EE' (
)EE( )
.FF 
HasManyFF 
<FF 
MarriageFF !
>FF! "
(FF" #
pFF# $
=>FF% '
pFF( )
.FF) * 
FirstPersonMarriagesFF* >
)FF> ?
.GG 
WithOneGG 
(GG 
mGG 
=>GG 
mGG 
.GG  
FirstPersonGG  +
)GG+ ,
.HH 
HasForeignKeyHH 
(HH 
mHH  
=>HH! #
mHH$ %
.HH% &
FirstPersonIdHH& 3
)HH3 4
.II 
OnDeleteII 
(II 
DeleteBehaviorII (
.II( )
NoActionII) 1
)II1 2
;II2 3
modelBuilderLL 
.LL 
EntityLL 
<LL  
PersonLL  &
>LL& '
(LL' (
)LL( )
.MM 
HasManyMM 
<MM 
MarriageMM !
>MM! "
(MM" #
pMM# $
=>MM% '
pMM( )
.MM) *!
SecondPersonMarriagesMM* ?
)MM? @
.NN 
WithOneNN 
(NN 
mNN 
=>NN 
mNN 
.NN  
SecondPersonNN  ,
)NN, -
.OO 
HasForeignKeyOO 
(OO 
mOO  
=>OO! #
mOO$ %
.OO% &
SecondPersonIdOO& 4
)OO4 5
.PP 
OnDeletePP 
(PP 
DeleteBehaviorPP (
.PP( )
NoActionPP) 1
)PP1 2
;PP2 3
modelBuilderSS 
.SS 
EntitySS 
<SS  
PersonSS  &
>SS& '
(SS' (
)SS( )
.TT 
HasManyTT 
<TT 
ParentChildTT $
>TT$ %
(TT% &
pTT& '
=>TT( *
pTT+ ,
.TT, -
ParentsTT- 4
)TT4 5
.UU 
WithOneUU 
(UU 
pcUU 
=>UU 
pcUU !
.UU! "
ChildUU" '
)UU' (
.VV 
HasForeignKeyVV 
(VV 
pcVV !
=>VV" $
pcVV% '
.VV' (
ChildIdVV( /
)VV/ 0
.WW 
OnDeleteWW 
(WW 
DeleteBehaviorWW (
.WW( )
NoActionWW) 1
)WW1 2
;WW2 3
modelBuilderZZ 
.ZZ 
EntityZZ 
<ZZ  
PersonZZ  &
>ZZ& '
(ZZ' (
)ZZ( )
.[[ 
HasMany[[ 
<[[ 
ParentChild[[ $
>[[$ %
([[% &
p[[& '
=>[[( *
p[[+ ,
.[[, -
Children[[- 5
)[[5 6
.\\ 
WithOne\\ 
(\\ 
pc\\ 
=>\\ 
pc\\ !
.\\! "
Parent\\" (
)\\( )
.]] 
HasForeignKey]] 
(]] 
pc]] !
=>]]" $
pc]]% '
.]]' (
ParentId]]( 0
)]]0 1
.^^ 
OnDelete^^ 
(^^ 
DeleteBehavior^^ (
.^^( )
NoAction^^) 1
)^^1 2
;^^2 3
modelBuilderaa 
.aa 
Entityaa 
<aa  
Personaa  &
>aa& '
(aa' (
)aa( )
.bb 
HasOnebb 
<bb 
Relativebb 
>bb  
(bb  !
pbb! "
=>bb# %
pbb& '
.bb' (
RelativeForPersonbb( 9
)bb9 :
.cc 
WithOnecc 
(cc 
succ 
=>cc 
succ  
.cc  !'
RelativePersonInPrimaryTreecc! <
)cc< =
.dd 
HasForeignKeydd 
<dd 
Relativedd &
>dd& '
(dd' (
sudd( *
=>dd+ -
sudd. 0
.dd0 1)
RelativePersonInPrimaryTreeIddd1 N
)ddN O
.ee 
OnDeleteee 
(ee 
DeleteBehavioree '
.ee' (
NoActionee( 0
)ee0 1
;ee1 2
modelBuilderhh 
.hh 
Entityhh 
<hh  
Personhh  &
>hh& '
(hh' (
)hh( )
.ii 
HasManyii 
<ii 
Requestii 
>ii  
(ii  !
pii! "
=>ii# %
pii& '
.ii' (#
SenderRequestsForPersonii( ?
)ii? @
.jj 
WithOnejj 
(jj 
srjj 
=>jj 
srjj  
.jj  !)
ReceiverReferenceInSenderTreejj! >
)jj> ?
.kk 
HasForeignKeykk 
(kk 
srkk  
=>kk! #
srkk$ &
.kk& '+
ReceiverReferenceInSenderTreeIdkk' F
)kkF G
.ll 
OnDeletell 
(ll 
DeleteBehaviorll '
.ll' (
NoActionll( 0
)ll0 1
;ll1 2
modelBuilderoo 
.oo 
Entityoo 
<oo  
Religionoo  (
>oo( )
(oo) *
)oo* +
.pp 
HasManypp 
<pp 
Personpp 
>pp 
(pp  
gpp  !
=>pp" $
gpp% &
.pp& '
Peoplepp' -
)pp- .
.qq 
WithOneqq 
(qq 
pqq 
=>qq 
pqq 
.qq 
Religionqq '
)qq' (
.rr 
HasForeignKeyrr 
(rr 
prr 
=>rr  "
prr# $
.rr$ %

ReligionIdrr% /
)rr/ 0
.ss 
OnDeletess 
(ss 
DeleteBehaviorss '
.ss' (
NoActionss( 0
)ss0 1
;ss1 2
modelBuildervv 
.vv 
Entityvv 
<vv  
Treevv  $
>vv$ %
(vv% &
)vv& '
.ww 
HasManyww 
<ww 
Personww 
>ww  
(ww  !
uww! "
=>ww# %
uww& '
.ww' (
PeopleInTreeww( 4
)ww4 5
.xx 
WithOnexx 
(xx 
pxx 
=>xx 
pxx 
.xx  
Treexx  $
)xx$ %
.yy 
HasForeignKeyyy 
(yy 
pyy  
=>yy! #
pyy$ %
.yy% &
TreeIdyy& ,
)yy, -
.zz 
OnDeletezz 
(zz 
DeleteBehaviorzz (
.zz( )
NoActionzz) 1
)zz1 2
;zz2 3
modelBuilder}} 
.}} 
Entity}} 
<}}  
User}}  $
>}}$ %
(}}% &
)}}& '
.~~ 
HasMany~~ 
<~~ 
	Education~~ "
>~~" #
(~~# $
u~~$ %
=>~~& (
u~~) *
.~~* +

Educations~~+ 5
)~~5 6
. 
WithOne 
( 
e 
=> 
e 
.  
User  $
)$ %
.
 
HasForeignKey
 
(
 
e
  
=>
! #
e
$ %
.
% &
UserId
& ,
)
, -
.
 
OnDelete
 
(
 
DeleteBehavior
 (
.
( )
NoAction
) 1
)
1 2
;
2 3
modelBuilder
 
.
 
Entity
 
<
  
User
  $
>
$ %
(
% &
)
& '
.
 
HasMany
 
<
 

Occupation
 #
>
# $
(
$ %
u
% &
=>
' )
u
* +
.
+ ,
Occupations
, 7
)
7 8
.
 
WithOne
 
(
 
o
 
=>
 
o
 
.
  
User
  $
)
$ %
.
 
HasForeignKey
 
(
 
o
  
=>
! #
o
$ %
.
% &
UserId
& ,
)
, -
.
 
OnDelete
 
(
 
DeleteBehavior
 (
.
( )
NoAction
) 1
)
1 2
;
2 3
modelBuilder
 
.
 
Entity
 
<
  
User
  $
>
$ %
(
% &
)
& '
.
 
HasMany
 
<
 
Relative
  
>
  !
(
! "
u
" #
=>
$ &
u
' (
.
( )
UserRelatives
) 6
)
6 7
.
 
WithOne
 
(
 
p
 
=>
 
p
 
.
 
PrimaryUser
 *
)
* +
.
 
HasForeignKey
 
(
 
p
 
=>
  "
p
# $
.
$ %
PrimaryUserId
% 2
)
2 3
.
 
OnDelete
 
(
 
DeleteBehavior
 '
.
' (
NoAction
( 0
)
0 1
;
1 2
modelBuilder
 
.
 
Entity
 
<
  
User
  $
>
$ %
(
% &
)
& '
.
 
HasMany
 
<
 
Relative
  
>
  !
(
! "
u
" #
=>
$ &
u
' (
.
( )
RelativesWithUser
) :
)
: ;
.
 
WithOne
 
(
 
p
 
=>
 
p
 
.
 
RelativeUser
 +
)
+ ,
.
 
HasForeignKey
 
(
 
p
 
=>
  "
p
# $
.
$ %
RelativeUserId
% 3
)
3 4
.
 
OnDelete
 
(
 
DeleteBehavior
 '
.
' (
NoAction
( 0
)
0 1
;
1 2
modelBuilder
 
.
 
Entity
 
<
  
User
  $
>
$ %
(
% &
)
& '
.
 
HasMany
 
<
 
Request
 
>
  
(
  !
u
! "
=>
# %
u
& '
.
' (
SentRequests
( 4
)
4 5
.
 
WithOne
 
(
 
p
 
=>
 
p
 
.
 
Sender
 %
)
% &
.
 
HasForeignKey
 
(
 
p
 
=>
  "
p
# $
.
$ %
SenderId
% -
)
- .
.
 
OnDelete
 
(
 
DeleteBehavior
 '
.
' (
NoAction
( 0
)
0 1
;
1 2
modelBuilder
   
.
   
Entity
   
<
    
User
    $
>
  $ %
(
  % &
)
  & '
.
¡¡ 
HasMany
¡¡ 
<
¡¡ 
Request
¡¡ 
>
¡¡  
(
¡¡  !
u
¡¡! "
=>
¡¡# %
u
¡¡& '
.
¡¡' (
ReceivedRequests
¡¡( 8
)
¡¡8 9
.
¢¢ 
WithOne
¢¢ 
(
¢¢ 
p
¢¢ 
=>
¢¢ 
p
¢¢ 
.
¢¢ 
Receiver
¢¢ '
)
¢¢' (
.
££ 
HasForeignKey
££ 
(
££ 
p
££ 
=>
££  "
p
££# $
.
££$ %

ReceiverId
££% /
)
££/ 0
.
¤¤ 
OnDelete
¤¤ 
(
¤¤ 
DeleteBehavior
¤¤ '
.
¤¤' (
NoAction
¤¤( 0
)
¤¤0 1
;
¤¤1 2
modelBuilder
¦¦ 
.
¦¦ 
Entity
¦¦ 
<
¦¦  
Person
¦¦  &
>
¦¦& '
(
¦¦' (
)
¦¦( )
.
¦¦) *

Navigation
¦¦* 4
(
¦¦4 5
p
¦¦5 6
=>
¦¦7 9
p
¦¦: ;
.
¦¦; <
Image
¦¦< A
)
¦¦A B
.
¦¦B C
AutoInclude
¦¦C N
(
¦¦N O
)
¦¦O P
;
¦¦P Q
modelBuilder
§§ 
.
§§ 
Entity
§§ 
<
§§  
Person
§§  &
>
§§& '
(
§§' (
)
§§( )
.
§§) *

Navigation
§§* 4
(
§§4 5
p
§§5 6
=>
§§7 9
p
§§: ;
.
§§; <
Nationality
§§< G
)
§§G H
.
§§H I
AutoInclude
§§I T
(
§§T U
)
§§U V
;
§§V W
modelBuilder
¨¨ 
.
¨¨ 
Entity
¨¨ 
<
¨¨  
Person
¨¨  &
>
¨¨& '
(
¨¨' (
)
¨¨( )
.
¨¨) *

Navigation
¨¨* 4
(
¨¨4 5
p
¨¨5 6
=>
¨¨7 9
p
¨¨: ;
.
¨¨; <
Religion
¨¨< D
)
¨¨D E
.
¨¨E F
AutoInclude
¨¨F Q
(
¨¨Q R
)
¨¨R S
;
¨¨S T
modelBuilder
©© 
.
©© 
Entity
©© 
<
©©  
Person
©©  &
>
©©& '
(
©©' (
)
©©( )
.
©©) *

Navigation
©©* 4
(
©©4 5
p
©©5 6
=>
©©7 9
p
©©: ;
.
©©; <

BirthPlace
©©< F
)
©©F G
.
©©G H
AutoInclude
©©H S
(
©©S T
)
©©T U
;
©©U V
modelBuilder
ªª 
.
ªª 
Entity
ªª 
<
ªª  
Person
ªª  &
>
ªª& '
(
ªª' (
)
ªª( )
.
ªª) *

Navigation
ªª* 4
(
ªª4 5
p
ªª5 6
=>
ªª7 9
p
ªª: ;
.
ªª; <
LivingPlace
ªª< G
)
ªªG H
.
ªªH I
AutoInclude
ªªI T
(
ªªT U
)
ªªU V
;
ªªV W
modelBuilder
¬¬ 
.
¬¬ 
Entity
¬¬ 
<
¬¬  
User
¬¬  $
>
¬¬$ %
(
¬¬% &
)
¬¬& '
.
¬¬' (

Navigation
¬¬( 2
(
¬¬2 3
u
¬¬3 4
=>
¬¬5 7
u
¬¬8 9
.
¬¬9 :
Occupations
¬¬: E
)
¬¬E F
.
¬¬F G
AutoInclude
¬¬G R
(
¬¬R S
)
¬¬S T
;
¬¬T U
modelBuilder
­­ 
.
­­ 
Entity
­­ 
<
­­  
User
­­  $
>
­­$ %
(
­­% &
)
­­& '
.
­­' (

Navigation
­­( 2
(
­­2 3
u
­­3 4
=>
­­5 7
u
­­8 9
.
­­9 :

Educations
­­: D
)
­­D E
.
­­E F
AutoInclude
­­F Q
(
­­Q R
)
­­R S
;
­­S T
modelBuilder
®® 
.
®® 
Entity
®® 
<
®®  
User
®®  $
>
®®$ %
(
®®% &
)
®®& '
.
®®' (

Navigation
®®( 2
(
®®2 3
u
®®3 4
=>
®®5 7
u
®®8 9
.
®®9 :
Person
®®: @
)
®®@ A
.
®®A B
AutoInclude
®®B M
(
®®M N
)
®®N O
;
®®O P
modelBuilder
¯¯ 
.
¯¯ 
Entity
¯¯ 
<
¯¯  
User
¯¯  $
>
¯¯$ %
(
¯¯% &
)
¯¯& '
.
¯¯' (

Navigation
¯¯( 2
(
¯¯2 3
u
¯¯3 4
=>
¯¯5 7
u
¯¯8 9
.
¯¯9 :
Position
¯¯: B
)
¯¯B C
.
¯¯C D
AutoInclude
¯¯D O
(
¯¯O P
)
¯¯P Q
;
¯¯Q R
modelBuilder
±± 
.
±± 
Entity
±± 
<
±±  
Relative
±±  (
>
±±( )
(
±±) *
)
±±* +
.
±±+ ,

Navigation
±±, 6
(
±±6 7
u
±±7 8
=>
±±9 ;
u
±±< =
.
±±= >
RelativeUser
±±> J
)
±±J K
.
±±K L
AutoInclude
±±L W
(
±±W X
)
±±X Y
;
±±Y Z
}
²² 	
public
´´ 
async
´´ 
Task
´´ 
SaveChangesAsync
´´ *
(
´´* +
)
´´+ ,
{
µµ 	
await
¶¶ 
base
¶¶ 
.
¶¶ 
SaveChangesAsync
¶¶ '
(
¶¶' (
)
¶¶( )
;
¶¶) *
}
·· 	
}
¸¸ 
}¹¹ ÷«
rE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Migrations\20220116001549_newDatabase.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
newDatabase $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str '
,' (
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 9
,9 :
x; <
=>= ?
x@ A
.A B
IdB D
)D E
;E F
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
} 
, 
constraints 
: 
table "
=># %
{   
table!! 
.!! 

PrimaryKey!! $
(!!$ %
$str!!% 1
,!!1 2
x!!3 4
=>!!5 7
x!!8 9
.!!9 :
Id!!: <
)!!< =
;!!= >
}"" 
)"" 
;"" 
migrationBuilder$$ 
.$$ 
CreateTable$$ (
($$( )
name%% 
:%% 
$str%% !
,%%! "
columns&& 
:&& 
table&& 
=>&& !
new&&" %
{'' 
Id(( 
=(( 
table(( 
.(( 
Column(( %
<((% &
int((& )
>(() *
(((* +
type((+ /
:((/ 0
$str((1 6
,((6 7
nullable((8 @
:((@ A
false((B G
)((G H
.)) 

Annotation)) #
())# $
$str))$ 8
,))8 9
$str)): @
)))@ A
,))A B
State** 
=** 
table** !
.**! "
Column**" (
<**( )
string**) /
>**/ 0
(**0 1
type**1 5
:**5 6
$str**7 F
,**F G
nullable**H P
:**P Q
true**R V
)**V W
,**W X
Country++ 
=++ 
table++ #
.++# $
Column++$ *
<++* +
string+++ 1
>++1 2
(++2 3
type++3 7
:++7 8
$str++9 H
,++H I
nullable++J R
:++R S
true++T X
)++X Y
,++Y Z
City,, 
=,, 
table,,  
.,,  !
Column,,! '
<,,' (
string,,( .
>,,. /
(,,/ 0
type,,0 4
:,,4 5
$str,,6 E
,,,E F
nullable,,G O
:,,O P
true,,Q U
),,U V
}-- 
,-- 
constraints.. 
:.. 
table.. "
=>..# %
{// 
table00 
.00 

PrimaryKey00 $
(00$ %
$str00% 3
,003 4
x005 6
=>007 9
x00: ;
.00; <
Id00< >
)00> ?
;00? @
}11 
)11 
;11 
migrationBuilder33 
.33 
CreateTable33 (
(33( )
name44 
:44 
$str44 %
,44% &
columns55 
:55 
table55 
=>55 !
new55" %
{66 
Id77 
=77 
table77 
.77 
Column77 %
<77% &
int77& )
>77) *
(77* +
type77+ /
:77/ 0
$str771 6
,776 7
nullable778 @
:77@ A
false77B G
)77G H
.88 

Annotation88 #
(88# $
$str88$ 8
,888 9
$str88: @
)88@ A
,88A B
Name99 
=99 
table99  
.99  !
Column99! '
<99' (
string99( .
>99. /
(99/ 0
type990 4
:994 5
$str996 E
,99E F
nullable99G O
:99O P
true99Q U
)99U V
}:: 
,:: 
constraints;; 
:;; 
table;; "
=>;;# %
{<< 
table== 
.== 

PrimaryKey== $
(==$ %
$str==% 7
,==7 8
x==9 :
=>==; =
x==> ?
.==? @
Id==@ B
)==B C
;==C D
}>> 
)>> 
;>> 
migrationBuilder@@ 
.@@ 
CreateTable@@ (
(@@( )
nameAA 
:AA 
$strAA !
,AA! "
columnsBB 
:BB 
tableBB 
=>BB !
newBB" %
{CC 
IdDD 
=DD 
tableDD 
.DD 
ColumnDD %
<DD% &
intDD& )
>DD) *
(DD* +
typeDD+ /
:DD/ 0
$strDD1 6
,DD6 7
nullableDD8 @
:DD@ A
falseDDB G
)DDG H
.EE 

AnnotationEE #
(EE# $
$strEE$ 8
,EE8 9
$strEE: @
)EE@ A
,EEA B
NameFF 
=FF 
tableFF  
.FF  !
ColumnFF! '
<FF' (
stringFF( .
>FF. /
(FF/ 0
typeFF0 4
:FF4 5
$strFF6 E
,FFE F
nullableFFG O
:FFO P
trueFFQ U
)FFU V
}GG 
,GG 
constraintsHH 
:HH 
tableHH "
=>HH# %
{II 
tableJJ 
.JJ 

PrimaryKeyJJ $
(JJ$ %
$strJJ% 3
,JJ3 4
xJJ5 6
=>JJ7 9
xJJ: ;
.JJ; <
IdJJ< >
)JJ> ?
;JJ? @
}KK 
)KK 
;KK 
migrationBuilderMM 
.MM 
CreateTableMM (
(MM( )
nameNN 
:NN 
$strNN 
,NN 
columnsOO 
:OO 
tableOO 
=>OO !
newOO" %
{PP 
IdQQ 
=QQ 
tableQQ 
.QQ 
ColumnQQ %
<QQ% &
GuidQQ& *
>QQ* +
(QQ+ ,
typeQQ, 0
:QQ0 1
$strQQ2 D
,QQD E
nullableQQF N
:QQN O
falseQQP U
)QQU V
,QQV W
NameRR 
=RR 
tableRR  
.RR  !
ColumnRR! '
<RR' (
stringRR( .
>RR. /
(RR/ 0
typeRR0 4
:RR4 5
$strRR6 E
,RRE F
nullableRRG O
:RRO P
trueRRQ U
)RRU V
,RRV W

LastUpdateSS 
=SS  
tableSS! &
.SS& '
ColumnSS' -
<SS- .
DateTimeSS. 6
>SS6 7
(SS7 8
typeSS8 <
:SS< =
$strSS> I
,SSI J
nullableSSK S
:SSS T
falseSSU Z
)SSZ [
}TT 
,TT 
constraintsUU 
:UU 
tableUU "
=>UU# %
{VV 
tableWW 
.WW 

PrimaryKeyWW $
(WW$ %
$strWW% /
,WW/ 0
xWW1 2
=>WW3 5
xWW6 7
.WW7 8
IdWW8 :
)WW: ;
;WW; <
}XX 
)XX 
;XX 
migrationBuilderZZ 
.ZZ 
CreateTableZZ (
(ZZ( )
name[[ 
:[[ 
$str[[ 
,[[ 
columns\\ 
:\\ 
table\\ 
=>\\ !
new\\" %
{]] 
Id^^ 
=^^ 
table^^ 
.^^ 
Column^^ %
<^^% &
int^^& )
>^^) *
(^^* +
type^^+ /
:^^/ 0
$str^^1 6
,^^6 7
nullable^^8 @
:^^@ A
false^^B G
)^^G H
.__ 

Annotation__ #
(__# $
$str__$ 8
,__8 9
$str__: @
)__@ A
,__A B
	FirstName`` 
=`` 
table``  %
.``% &
Column``& ,
<``, -
string``- 3
>``3 4
(``4 5
type``5 9
:``9 :
$str``; J
,``J K
nullable``L T
:``T U
true``V Z
)``Z [
,``[ \
LastNameaa 
=aa 
tableaa $
.aa$ %
Columnaa% +
<aa+ ,
stringaa, 2
>aa2 3
(aa3 4
typeaa4 8
:aa8 9
$straa: I
,aaI J
nullableaaK S
:aaS T
trueaaU Y
)aaY Z
,aaZ [
	BirthDatebb 
=bb 
tablebb  %
.bb% &
Columnbb& ,
<bb, -
DateTimebb- 5
>bb5 6
(bb6 7
typebb7 ;
:bb; <
$strbb= H
,bbH I
nullablebbJ R
:bbR S
truebbT X
)bbX Y
,bbY Z
	DeathDatecc 
=cc 
tablecc  %
.cc% &
Columncc& ,
<cc, -
DateTimecc- 5
>cc5 6
(cc6 7
typecc7 ;
:cc; <
$strcc= H
,ccH I
nullableccJ R
:ccR S
trueccT X
)ccX Y
,ccY Z

LastUpdatedd 
=dd  
tabledd! &
.dd& '
Columndd' -
<dd- .
DateTimedd. 6
>dd6 7
(dd7 8
typedd8 <
:dd< =
$strdd> I
,ddI J
nullableddK S
:ddS T
falseddU Z
)ddZ [
,dd[ \
TreeIdee 
=ee 
tableee "
.ee" #
Columnee# )
<ee) *
Guidee* .
>ee. /
(ee/ 0
typeee0 4
:ee4 5
$stree6 H
,eeH I
nullableeeJ R
:eeR S
falseeeT Y
)eeY Z
,eeZ [
GenderIdff 
=ff 
tableff $
.ff$ %
Columnff% +
<ff+ ,
intff, /
>ff/ 0
(ff0 1
typeff1 5
:ff5 6
$strff7 <
,ff< =
nullableff> F
:ffF G
trueffH L
)ffL M
,ffM N
BirthPlaceIdgg  
=gg! "
tablegg# (
.gg( )
Columngg) /
<gg/ 0
intgg0 3
>gg3 4
(gg4 5
typegg5 9
:gg9 :
$strgg; @
,gg@ A
nullableggB J
:ggJ K
trueggL P
)ggP Q
,ggQ R
LivingPlaceIdhh !
=hh" #
tablehh$ )
.hh) *
Columnhh* 0
<hh0 1
inthh1 4
>hh4 5
(hh5 6
typehh6 :
:hh: ;
$strhh< A
,hhA B
nullablehhC K
:hhK L
truehhM Q
)hhQ R
,hhR S
NationalityIdii !
=ii" #
tableii$ )
.ii) *
Columnii* 0
<ii0 1
intii1 4
>ii4 5
(ii5 6
typeii6 :
:ii: ;
$strii< A
,iiA B
nullableiiC K
:iiK L
trueiiM Q
)iiQ R
,iiR S

ReligionIdjj 
=jj  
tablejj! &
.jj& '
Columnjj' -
<jj- .
intjj. 1
>jj1 2
(jj2 3
typejj3 7
:jj7 8
$strjj9 >
,jj> ?
nullablejj@ H
:jjH I
truejjJ N
)jjN O
}kk 
,kk 
constraintsll 
:ll 
tablell "
=>ll# %
{mm 
tablenn 
.nn 

PrimaryKeynn $
(nn$ %
$strnn% 0
,nn0 1
xnn2 3
=>nn4 6
xnn7 8
.nn8 9
Idnn9 ;
)nn; <
;nn< =
tableoo 
.oo 

ForeignKeyoo $
(oo$ %
namepp 
:pp 
$strpp :
,pp: ;
columnqq 
:qq 
xqq  !
=>qq" $
xqq% &
.qq& '
GenderIdqq' /
,qq/ 0
principalTablerr &
:rr& '
$strrr( 1
,rr1 2
principalColumnss '
:ss' (
$strss) -
)ss- .
;ss. /
tablett 
.tt 

ForeignKeytt $
(tt$ %
nameuu 
:uu 
$struu @
,uu@ A
columnvv 
:vv 
xvv  !
=>vv" $
xvv% &
.vv& '
BirthPlaceIdvv' 3
,vv3 4
principalTableww &
:ww& '
$strww( 3
,ww3 4
principalColumnxx '
:xx' (
$strxx) -
)xx- .
;xx. /
tableyy 
.yy 

ForeignKeyyy $
(yy$ %
namezz 
:zz 
$strzz A
,zzA B
column{{ 
:{{ 
x{{  !
=>{{" $
x{{% &
.{{& '
LivingPlaceId{{' 4
,{{4 5
principalTable|| &
:||& '
$str||( 3
,||3 4
principalColumn}} '
:}}' (
$str}}) -
)}}- .
;}}. /
table~~ 
.~~ 

ForeignKey~~ $
(~~$ %
name 
: 
$str E
,E F
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
NationalityId
' 4
,
4 5
principalTable
 &
:
& '
$str
( 7
,
7 8
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 >
,
> ?
column
 
:
 
x
  !
=>
" $
x
% &
.
& '

ReligionId
' 1
,
1 2
principalTable
 &
:
& '
$str
( 3
,
3 4
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 6
,
6 7
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
TreeId
' -
,
- .
principalTable
 &
:
& '
$str
( /
,
/ 0
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 !
,
! "
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
int
& )
>
) *
(
* +
type
+ /
:
/ 0
$str
1 6
,
6 7
nullable
8 @
:
@ A
false
B G
)
G H
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
	StartDate
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
false
T Y
)
Y Z
,
Z [
EndDate
 
=
 
table
 #
.
# $
Column
$ *
<
* +
DateTime
+ 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; F
,
F G
nullable
H P
:
P Q
true
R V
)
V W
,
W X
FirstPersonId
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
int
1 4
>
4 5
(
5 6
type
6 :
:
: ;
$str
< A
,
A B
nullable
C K
:
K L
false
M R
)
R S
,
S T
SecondPersonId
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
int
2 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= B
,
B C
nullable
D L
:
L M
false
N S
)
S T
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 3
,
3 4
x
5 6
=>
7 9
x
: ;
.
; <
Id
< >
)
> ?
;
? @
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 A
,
A B
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
FirstPersonId
' 4
,
4 5
principalTable
   &
:
  & '
$str
  ( 0
,
  0 1
principalColumn
¡¡ '
:
¡¡' (
$str
¡¡) -
)
¡¡- .
;
¡¡. /
table
¢¢ 
.
¢¢ 

ForeignKey
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ B
,
££B C
column
¤¤ 
:
¤¤ 
x
¤¤  !
=>
¤¤" $
x
¤¤% &
.
¤¤& '
SecondPersonId
¤¤' 5
,
¤¤5 6
principalTable
¥¥ &
:
¥¥& '
$str
¥¥( 0
,
¥¥0 1
principalColumn
¦¦ '
:
¦¦' (
$str
¦¦) -
)
¦¦- .
;
¦¦. /
}
§§ 
)
§§ 
;
§§ 
migrationBuilder
©© 
.
©© 
CreateTable
©© (
(
©©( )
name
ªª 
:
ªª 
$str
ªª '
,
ªª' (
columns
«« 
:
«« 
table
«« 
=>
«« !
new
««" %
{
¬¬ 
Id
­­ 
=
­­ 
table
­­ 
.
­­ 
Column
­­ %
<
­­% &
int
­­& )
>
­­) *
(
­­* +
type
­­+ /
:
­­/ 0
$str
­­1 6
,
­­6 7
nullable
­­8 @
:
­­@ A
false
­­B G
)
­­G H
.
®® 

Annotation
®® #
(
®®# $
$str
®®$ 8
,
®®8 9
$str
®®: @
)
®®@ A
,
®®A B
BloodRelatives
¯¯ "
=
¯¯# $
table
¯¯% *
.
¯¯* +
Column
¯¯+ 1
<
¯¯1 2
bool
¯¯2 6
>
¯¯6 7
(
¯¯7 8
type
¯¯8 <
:
¯¯< =
$str
¯¯> C
,
¯¯C D
nullable
¯¯E M
:
¯¯M N
false
¯¯O T
)
¯¯T U
,
¯¯U V
ParentId
°° 
=
°° 
table
°° $
.
°°$ %
Column
°°% +
<
°°+ ,
int
°°, /
>
°°/ 0
(
°°0 1
type
°°1 5
:
°°5 6
$str
°°7 <
,
°°< =
nullable
°°> F
:
°°F G
false
°°H M
)
°°M N
,
°°N O
ChildId
±± 
=
±± 
table
±± #
.
±±# $
Column
±±$ *
<
±±* +
int
±±+ .
>
±±. /
(
±±/ 0
type
±±0 4
:
±±4 5
$str
±±6 ;
,
±±; <
nullable
±±= E
:
±±E F
false
±±G L
)
±±L M
}
²² 
,
²² 
constraints
³³ 
:
³³ 
table
³³ "
=>
³³# %
{
´´ 
table
µµ 
.
µµ 

PrimaryKey
µµ $
(
µµ$ %
$str
µµ% 9
,
µµ9 :
x
µµ; <
=>
µµ= ?
x
µµ@ A
.
µµA B
Id
µµB D
)
µµD E
;
µµE F
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
·· 
:
·· 
$str
·· A
,
··A B
column
¸¸ 
:
¸¸ 
x
¸¸  !
=>
¸¸" $
x
¸¸% &
.
¸¸& '
ChildId
¸¸' .
,
¸¸. /
principalTable
¹¹ &
:
¹¹& '
$str
¹¹( 0
,
¹¹0 1
principalColumn
ºº '
:
ºº' (
$str
ºº) -
)
ºº- .
;
ºº. /
table
»» 
.
»» 

ForeignKey
»» $
(
»»$ %
name
¼¼ 
:
¼¼ 
$str
¼¼ B
,
¼¼B C
column
½½ 
:
½½ 
x
½½  !
=>
½½" $
x
½½% &
.
½½& '
ParentId
½½' /
,
½½/ 0
principalTable
¾¾ &
:
¾¾& '
$str
¾¾( 0
,
¾¾0 1
principalColumn
¿¿ '
:
¿¿' (
$str
¿¿) -
)
¿¿- .
;
¿¿. /
}
ÀÀ 
)
ÀÀ 
;
ÀÀ 
migrationBuilder
ÂÂ 
.
ÂÂ 
CreateTable
ÂÂ (
(
ÂÂ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ 
,
ÃÃ 
columns
ÄÄ 
:
ÄÄ 
table
ÄÄ 
=>
ÄÄ !
new
ÄÄ" %
{
ÅÅ 
Id
ÆÆ 
=
ÆÆ 
table
ÆÆ 
.
ÆÆ 
Column
ÆÆ %
<
ÆÆ% &
Guid
ÆÆ& *
>
ÆÆ* +
(
ÆÆ+ ,
type
ÆÆ, 0
:
ÆÆ0 1
$str
ÆÆ2 D
,
ÆÆD E
nullable
ÆÆF N
:
ÆÆN O
false
ÆÆP U
)
ÆÆU V
,
ÆÆV W
Username
ÇÇ 
=
ÇÇ 
table
ÇÇ $
.
ÇÇ$ %
Column
ÇÇ% +
<
ÇÇ+ ,
string
ÇÇ, 2
>
ÇÇ2 3
(
ÇÇ3 4
type
ÇÇ4 8
:
ÇÇ8 9
$str
ÇÇ: I
,
ÇÇI J
nullable
ÇÇK S
:
ÇÇS T
true
ÇÇU Y
)
ÇÇY Z
,
ÇÇZ [
PasswordHash
ÈÈ  
=
ÈÈ! "
table
ÈÈ# (
.
ÈÈ( )
Column
ÈÈ) /
<
ÈÈ/ 0
string
ÈÈ0 6
>
ÈÈ6 7
(
ÈÈ7 8
type
ÈÈ8 <
:
ÈÈ< =
$str
ÈÈ> M
,
ÈÈM N
nullable
ÈÈO W
:
ÈÈW X
true
ÈÈY ]
)
ÈÈ] ^
,
ÈÈ^ _
PasswordSalt
ÉÉ  
=
ÉÉ! "
table
ÉÉ# (
.
ÉÉ( )
Column
ÉÉ) /
<
ÉÉ/ 0
string
ÉÉ0 6
>
ÉÉ6 7
(
ÉÉ7 8
type
ÉÉ8 <
:
ÉÉ< =
$str
ÉÉ> M
,
ÉÉM N
nullable
ÉÉO W
:
ÉÉW X
true
ÉÉY ]
)
ÉÉ] ^
,
ÉÉ^ _
Email
ÊÊ 
=
ÊÊ 
table
ÊÊ !
.
ÊÊ! "
Column
ÊÊ" (
<
ÊÊ( )
string
ÊÊ) /
>
ÊÊ/ 0
(
ÊÊ0 1
type
ÊÊ1 5
:
ÊÊ5 6
$str
ÊÊ7 F
,
ÊÊF G
nullable
ÊÊH P
:
ÊÊP Q
true
ÊÊR V
)
ÊÊV W
,
ÊÊW X
PhoneNumber
ËË 
=
ËË  !
table
ËË" '
.
ËË' (
Column
ËË( .
<
ËË. /
string
ËË/ 5
>
ËË5 6
(
ËË6 7
type
ËË7 ;
:
ËË; <
$str
ËË= L
,
ËËL M
nullable
ËËN V
:
ËËV W
true
ËËX \
)
ËË\ ]
,
ËË] ^
About
ÌÌ 
=
ÌÌ 
table
ÌÌ !
.
ÌÌ! "
Column
ÌÌ" (
<
ÌÌ( )
string
ÌÌ) /
>
ÌÌ/ 0
(
ÌÌ0 1
type
ÌÌ1 5
:
ÌÌ5 6
$str
ÌÌ7 F
,
ÌÌF G
nullable
ÌÌH P
:
ÌÌP Q
true
ÌÌR V
)
ÌÌV W
,
ÌÌW X
NotifyBirthdays
ÍÍ #
=
ÍÍ$ %
table
ÍÍ& +
.
ÍÍ+ ,
Column
ÍÍ, 2
<
ÍÍ2 3
bool
ÍÍ3 7
>
ÍÍ7 8
(
ÍÍ8 9
type
ÍÍ9 =
:
ÍÍ= >
$str
ÍÍ? D
,
ÍÍD E
nullable
ÍÍF N
:
ÍÍN O
false
ÍÍP U
)
ÍÍU V
,
ÍÍV W
NotifyUpdates
ÎÎ !
=
ÎÎ" #
table
ÎÎ$ )
.
ÎÎ) *
Column
ÎÎ* 0
<
ÎÎ0 1
bool
ÎÎ1 5
>
ÎÎ5 6
(
ÎÎ6 7
type
ÎÎ7 ;
:
ÎÎ; <
$str
ÎÎ= B
,
ÎÎB C
nullable
ÎÎD L
:
ÎÎL M
false
ÎÎN S
)
ÎÎS T
,
ÎÎT U
SharePersonalInfo
ÏÏ %
=
ÏÏ& '
table
ÏÏ( -
.
ÏÏ- .
Column
ÏÏ. 4
<
ÏÏ4 5
bool
ÏÏ5 9
>
ÏÏ9 :
(
ÏÏ: ;
type
ÏÏ; ?
:
ÏÏ? @
$str
ÏÏA F
,
ÏÏF G
nullable
ÏÏH P
:
ÏÏP Q
false
ÏÏR W
)
ÏÏW X
,
ÏÏX Y
ThemePreference
ÐÐ #
=
ÐÐ$ %
table
ÐÐ& +
.
ÐÐ+ ,
Column
ÐÐ, 2
<
ÐÐ2 3
bool
ÐÐ3 7
>
ÐÐ7 8
(
ÐÐ8 9
type
ÐÐ9 =
:
ÐÐ= >
$str
ÐÐ? D
,
ÐÐD E
nullable
ÐÐF N
:
ÐÐN O
false
ÐÐP U
)
ÐÐU V
,
ÐÐV W 
LanguagePreference
ÑÑ &
=
ÑÑ' (
table
ÑÑ) .
.
ÑÑ. /
Column
ÑÑ/ 5
<
ÑÑ5 6
string
ÑÑ6 <
>
ÑÑ< =
(
ÑÑ= >
type
ÑÑ> B
:
ÑÑB C
$str
ÑÑD S
,
ÑÑS T
nullable
ÑÑU ]
:
ÑÑ] ^
true
ÑÑ_ c
)
ÑÑc d
,
ÑÑd e
LastSyncCheck
ÒÒ !
=
ÒÒ" #
table
ÒÒ$ )
.
ÒÒ) *
Column
ÒÒ* 0
<
ÒÒ0 1
DateTime
ÒÒ1 9
>
ÒÒ9 :
(
ÒÒ: ;
type
ÒÒ; ?
:
ÒÒ? @
$str
ÒÒA L
,
ÒÒL M
nullable
ÒÒN V
:
ÒÒV W
true
ÒÒX \
)
ÒÒ\ ]
,
ÒÒ] ^
PersonId
ÓÓ 
=
ÓÓ 
table
ÓÓ $
.
ÓÓ$ %
Column
ÓÓ% +
<
ÓÓ+ ,
int
ÓÓ, /
>
ÓÓ/ 0
(
ÓÓ0 1
type
ÓÓ1 5
:
ÓÓ5 6
$str
ÓÓ7 <
,
ÓÓ< =
nullable
ÓÓ> F
:
ÓÓF G
false
ÓÓH M
)
ÓÓM N
}
ÔÔ 
,
ÔÔ 
constraints
ÕÕ 
:
ÕÕ 
table
ÕÕ "
=>
ÕÕ# %
{
ÖÖ 
table
×× 
.
×× 

PrimaryKey
×× $
(
××$ %
$str
××% /
,
××/ 0
x
××1 2
=>
××3 5
x
××6 7
.
××7 8
Id
××8 :
)
××: ;
;
××; <
table
ØØ 
.
ØØ 

ForeignKey
ØØ $
(
ØØ$ %
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ 8
,
ÙÙ8 9
column
ÚÚ 
:
ÚÚ 
x
ÚÚ  !
=>
ÚÚ" $
x
ÚÚ% &
.
ÚÚ& '
PersonId
ÚÚ' /
,
ÚÚ/ 0
principalTable
ÛÛ &
:
ÛÛ& '
$str
ÛÛ( 0
,
ÛÛ0 1
principalColumn
ÜÜ '
:
ÜÜ' (
$str
ÜÜ) -
,
ÜÜ- .
onDelete
ÝÝ  
:
ÝÝ  !
ReferentialAction
ÝÝ" 3
.
ÝÝ3 4
Cascade
ÝÝ4 ;
)
ÝÝ; <
;
ÝÝ< =
}
ÞÞ 
)
ÞÞ 
;
ÞÞ 
migrationBuilder
àà 
.
àà 
CreateTable
àà (
(
àà( )
name
áá 
:
áá 
$str
áá "
,
áá" #
columns
ââ 
:
ââ 
table
ââ 
=>
ââ !
new
ââ" %
{
ãã 
Id
ää 
=
ää 
table
ää 
.
ää 
Column
ää %
<
ää% &
int
ää& )
>
ää) *
(
ää* +
type
ää+ /
:
ää/ 0
$str
ää1 6
,
ää6 7
nullable
ää8 @
:
ää@ A
false
ääB G
)
ääG H
.
åå 

Annotation
åå #
(
åå# $
$str
åå$ 8
,
åå8 9
$str
åå: @
)
åå@ A
,
ååA B$
EducationInstituteName
ææ *
=
ææ+ ,
table
ææ- 2
.
ææ2 3
Column
ææ3 9
<
ææ9 :
string
ææ: @
>
ææ@ A
(
ææA B
type
ææB F
:
ææF G
$str
ææH W
,
ææW X
nullable
ææY a
:
ææa b
true
ææc g
)
ææg h
,
ææh i
	StartDate
çç 
=
çç 
table
çç  %
.
çç% &
Column
çç& ,
<
çç, -
DateTime
çç- 5
>
çç5 6
(
çç6 7
type
çç7 ;
:
çç; <
$str
çç= H
,
ççH I
nullable
ççJ R
:
ççR S
false
ççT Y
)
ççY Z
,
ççZ [
EndDate
èè 
=
èè 
table
èè #
.
èè# $
Column
èè$ *
<
èè* +
DateTime
èè+ 3
>
èè3 4
(
èè4 5
type
èè5 9
:
èè9 :
$str
èè; F
,
èèF G
nullable
èèH P
:
èèP Q
false
èèR W
)
èèW X
,
èèX Y
UserId
éé 
=
éé 
table
éé "
.
éé" #
Column
éé# )
<
éé) *
Guid
éé* .
>
éé. /
(
éé/ 0
type
éé0 4
:
éé4 5
$str
éé6 H
,
ééH I
nullable
ééJ R
:
ééR S
false
ééT Y
)
ééY Z
,
ééZ [
EducationLevelId
êê $
=
êê% &
table
êê' ,
.
êê, -
Column
êê- 3
<
êê3 4
int
êê4 7
>
êê7 8
(
êê8 9
type
êê9 =
:
êê= >
$str
êê? D
,
êêD E
nullable
êêF N
:
êêN O
true
êêP T
)
êêT U
}
ëë 
,
ëë 
constraints
ìì 
:
ìì 
table
ìì "
=>
ìì# %
{
íí 
table
îî 
.
îî 

PrimaryKey
îî $
(
îî$ %
$str
îî% 4
,
îî4 5
x
îî6 7
=>
îî8 :
x
îî; <
.
îî< =
Id
îî= ?
)
îî? @
;
îî@ A
table
ïï 
.
ïï 

ForeignKey
ïï $
(
ïï$ %
name
ðð 
:
ðð 
$str
ðð N
,
ððN O
column
ññ 
:
ññ 
x
ññ  !
=>
ññ" $
x
ññ% &
.
ññ& '
EducationLevelId
ññ' 7
,
ññ7 8
principalTable
òò &
:
òò& '
$str
òò( 9
,
òò9 :
principalColumn
óó '
:
óó' (
$str
óó) -
)
óó- .
;
óó. /
table
ôô 
.
ôô 

ForeignKey
ôô $
(
ôô$ %
name
õõ 
:
õõ 
$str
õõ :
,
õõ: ;
column
öö 
:
öö 
x
öö  !
=>
öö" $
x
öö% &
.
öö& '
UserId
öö' -
,
öö- .
principalTable
÷÷ &
:
÷÷& '
$str
÷÷( /
,
÷÷/ 0
principalColumn
øø '
:
øø' (
$str
øø) -
)
øø- .
;
øø. /
}
ùù 
)
ùù 
;
ùù 
migrationBuilder
ûû 
.
ûû 
CreateTable
ûû (
(
ûû( )
name
üü 
:
üü 
$str
üü #
,
üü# $
columns
ýý 
:
ýý 
table
ýý 
=>
ýý !
new
ýý" %
{
þþ 
Id
ÿÿ 
=
ÿÿ 
table
ÿÿ 
.
ÿÿ 
Column
ÿÿ %
<
ÿÿ% &
int
ÿÿ& )
>
ÿÿ) *
(
ÿÿ* +
type
ÿÿ+ /
:
ÿÿ/ 0
$str
ÿÿ1 6
,
ÿÿ6 7
nullable
ÿÿ8 @
:
ÿÿ@ A
false
ÿÿB G
)
ÿÿG H
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
OccupationName
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
string
2 8
>
8 9
(
9 :
type
: >
:
> ?
$str
@ O
,
O P
nullable
Q Y
:
Y Z
true
[ _
)
_ `
,
` a
WorkingPlaceName
 $
=
% &
table
' ,
.
, -
Column
- 3
<
3 4
string
4 :
>
: ;
(
; <
type
< @
:
@ A
$str
B Q
,
Q R
nullable
S [
:
[ \
true
] a
)
a b
,
b c
	StartDate
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
EndDate
 
=
 
table
 #
.
# $
Column
$ *
<
* +
DateTime
+ 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; F
,
F G
nullable
H P
:
P Q
true
R V
)
V W
,
W X
UserId
 
=
 
table
 "
.
" #
Column
# )
<
) *
Guid
* .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 H
,
H I
nullable
J R
:
R S
false
T Y
)
Y Z
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 5
,
5 6
x
7 8
=>
9 ;
x
< =
.
= >
Id
> @
)
@ A
;
A B
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 ;
,
; <
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( /
,
/ 0
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 $
,
$ %
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
int
& )
>
) *
(
* +
type
+ /
:
/ 0
$str
1 6
,
6 7
nullable
8 @
:
@ A
false
B G
)
G H
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
ReceiverResponded
 %
=
& '
table
( -
.
- .
Column
. 4
<
4 5
bool
5 9
>
9 :
(
: ;
type
; ?
:
? @
$str
A F
,
F G
nullable
H P
:
P Q
false
R W
)
W X
,
X Y
Response
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
bool
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
SenderId
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
Guid
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 J
,
J K
nullable
L T
:
T U
false
V [
)
[ \
,
\ ]

ReceiverId
 
=
  
table
! &
.
& '
Column
' -
<
- .
Guid
. 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: L
,
L M
nullable
N V
:
V W
false
X ]
)
] ^
,
^ _-
ReceiverReferenceInSenderTreeId
 3
=
4 5
table
6 ;
.
; <
Column
< B
<
B C
int
C F
>
F G
(
G H
type
H L
:
L M
$str
N S
,
S T
nullable
U ]
:
] ^
false
_ d
)
d e
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 6
,
6 7
x
8 9
=>
: <
x
= >
.
> ?
Id
? A
)
A B
;
B C
table
   
.
   

ForeignKey
   $
(
  $ %
name
¡¡ 
:
¡¡ 
$str
¡¡ V
,
¡¡V W
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '-
ReceiverReferenceInSenderTreeId
¢¢' F
,
¢¢F G
principalTable
££ &
:
££& '
$str
££( 0
,
££0 1
principalColumn
¤¤ '
:
¤¤' (
$str
¤¤) -
)
¤¤- .
;
¤¤. /
table
¥¥ 
.
¥¥ 

ForeignKey
¥¥ $
(
¥¥$ %
name
¦¦ 
:
¦¦ 
$str
¦¦ @
,
¦¦@ A
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '

ReceiverId
§§' 1
,
§§1 2
principalTable
¨¨ &
:
¨¨& '
$str
¨¨( /
,
¨¨/ 0
principalColumn
©© '
:
©©' (
$str
©©) -
)
©©- .
;
©©. /
table
ªª 
.
ªª 

ForeignKey
ªª $
(
ªª$ %
name
«« 
:
«« 
$str
«« >
,
««> ?
column
¬¬ 
:
¬¬ 
x
¬¬  !
=>
¬¬" $
x
¬¬% &
.
¬¬& '
SenderId
¬¬' /
,
¬¬/ 0
principalTable
­­ &
:
­­& '
$str
­­( /
,
­­/ 0
principalColumn
®® '
:
®®' (
$str
®®) -
)
®®- .
;
®®. /
}
¯¯ 
)
¯¯ 
;
¯¯ 
migrationBuilder
±± 
.
±± 
CreateTable
±± (
(
±±( )
name
²² 
:
²² 
$str
²² 
,
²² 
columns
³³ 
:
³³ 
table
³³ 
=>
³³ !
new
³³" %
{
´´ 
Id
µµ 
=
µµ 
table
µµ 
.
µµ 
Column
µµ %
<
µµ% &
int
µµ& )
>
µµ) *
(
µµ* +
type
µµ+ /
:
µµ/ 0
$str
µµ1 6
,
µµ6 7
nullable
µµ8 @
:
µµ@ A
false
µµB G
)
µµG H
.
¶¶ 

Annotation
¶¶ #
(
¶¶# $
$str
¶¶$ 8
,
¶¶8 9
$str
¶¶: @
)
¶¶@ A
,
¶¶A B
PrimaryUserId
·· !
=
··" #
table
··$ )
.
··) *
Column
··* 0
<
··0 1
Guid
··1 5
>
··5 6
(
··6 7
type
··7 ;
:
··; <
$str
··= O
,
··O P
nullable
··Q Y
:
··Y Z
false
··[ `
)
··` a
,
··a b
SyncedUserId
¸¸  
=
¸¸! "
table
¸¸# (
.
¸¸( )
Column
¸¸) /
<
¸¸/ 0
Guid
¸¸0 4
>
¸¸4 5
(
¸¸5 6
type
¸¸6 :
:
¸¸: ;
$str
¸¸< N
,
¸¸N O
nullable
¸¸P X
:
¸¸X Y
false
¸¸Z _
)
¸¸_ `
,
¸¸` a)
SyncedPersonInPrimaryTreeId
¹¹ /
=
¹¹0 1
table
¹¹2 7
.
¹¹7 8
Column
¹¹8 >
<
¹¹> ?
int
¹¹? B
>
¹¹B C
(
¹¹C D
type
¹¹D H
:
¹¹H I
$str
¹¹J O
,
¹¹O P
nullable
¹¹Q Y
:
¹¹Y Z
false
¹¹[ `
)
¹¹` a
,
¹¹a b
SynchedUserId
ºº !
=
ºº" #
table
ºº$ )
.
ºº) *
Column
ºº* 0
<
ºº0 1
Guid
ºº1 5
>
ºº5 6
(
ºº6 7
type
ºº7 ;
:
ºº; <
$str
ºº= O
,
ººO P
nullable
ººQ Y
:
ººY Z
true
ºº[ _
)
ºº_ `
}
»» 
,
»» 
constraints
¼¼ 
:
¼¼ 
table
¼¼ "
=>
¼¼# %
{
½½ 
table
¾¾ 
.
¾¾ 

PrimaryKey
¾¾ $
(
¾¾$ %
$str
¾¾% /
,
¾¾/ 0
x
¾¾1 2
=>
¾¾3 5
x
¾¾6 7
.
¾¾7 8
Id
¾¾8 :
)
¾¾: ;
;
¾¾; <
table
¿¿ 
.
¿¿ 

ForeignKey
¿¿ $
(
¿¿$ %
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ K
,
ÀÀK L
column
ÁÁ 
:
ÁÁ 
x
ÁÁ  !
=>
ÁÁ" $
x
ÁÁ% &
.
ÁÁ& ')
SyncedPersonInPrimaryTreeId
ÁÁ' B
,
ÁÁB C
principalTable
ÂÂ &
:
ÂÂ& '
$str
ÂÂ( 0
,
ÂÂ0 1
principalColumn
ÃÃ '
:
ÃÃ' (
$str
ÃÃ) -
)
ÃÃ- .
;
ÃÃ. /
table
ÄÄ 
.
ÄÄ 

ForeignKey
ÄÄ $
(
ÄÄ$ %
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ <
,
ÅÅ< =
column
ÆÆ 
:
ÆÆ 
x
ÆÆ  !
=>
ÆÆ" $
x
ÆÆ% &
.
ÆÆ& '
PrimaryUserId
ÆÆ' 4
,
ÆÆ4 5
principalTable
ÇÇ &
:
ÇÇ& '
$str
ÇÇ( /
,
ÇÇ/ 0
principalColumn
ÈÈ '
:
ÈÈ' (
$str
ÈÈ) -
)
ÈÈ- .
;
ÈÈ. /
table
ÉÉ 
.
ÉÉ 

ForeignKey
ÉÉ $
(
ÉÉ$ %
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ ;
,
ÊÊ; <
column
ËË 
:
ËË 
x
ËË  !
=>
ËË" $
x
ËË% &
.
ËË& '
SyncedUserId
ËË' 3
,
ËË3 4
principalTable
ÌÌ &
:
ÌÌ& '
$str
ÌÌ( /
,
ÌÌ/ 0
principalColumn
ÍÍ '
:
ÍÍ' (
$str
ÍÍ) -
)
ÍÍ- .
;
ÍÍ. /
}
ÎÎ 
)
ÎÎ 
;
ÎÎ 
migrationBuilder
ÐÐ 
.
ÐÐ 
CreateIndex
ÐÐ (
(
ÐÐ( )
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ 6
,
ÑÑ6 7
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ #
,
ÒÒ# $
column
ÓÓ 
:
ÓÓ 
$str
ÓÓ *
)
ÓÓ* +
;
ÓÓ+ ,
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateIndex
ÕÕ (
(
ÕÕ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ ,
,
ÖÖ, -
table
×× 
:
×× 
$str
×× #
,
××# $
column
ØØ 
:
ØØ 
$str
ØØ  
)
ØØ  !
;
ØØ! "
migrationBuilder
ÚÚ 
.
ÚÚ 
CreateIndex
ÚÚ (
(
ÚÚ( )
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ 2
,
ÛÛ2 3
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ "
,
ÜÜ" #
column
ÝÝ 
:
ÝÝ 
$str
ÝÝ '
)
ÝÝ' (
;
ÝÝ( )
migrationBuilder
ßß 
.
ßß 
CreateIndex
ßß (
(
ßß( )
name
àà 
:
àà 
$str
àà 3
,
àà3 4
table
áá 
:
áá 
$str
áá "
,
áá" #
column
ââ 
:
ââ 
$str
ââ (
)
ââ( )
;
ââ) *
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
åå 
:
åå 
$str
åå -
,
åå- .
table
ææ 
:
ææ 
$str
ææ $
,
ææ$ %
column
çç 
:
çç 
$str
çç  
)
çç  !
;
çç! "
migrationBuilder
éé 
.
éé 
CreateIndex
éé (
(
éé( )
name
êê 
:
êê 
$str
êê 2
,
êê2 3
table
ëë 
:
ëë 
$str
ëë (
,
ëë( )
column
ìì 
:
ìì 
$str
ìì !
)
ìì! "
;
ìì" #
migrationBuilder
îî 
.
îî 
CreateIndex
îî (
(
îî( )
name
ïï 
:
ïï 
$str
ïï 3
,
ïï3 4
table
ðð 
:
ðð 
$str
ðð (
,
ðð( )
column
ññ 
:
ññ 
$str
ññ "
)
ññ" #
;
ññ# $
migrationBuilder
óó 
.
óó 
CreateIndex
óó (
(
óó( )
name
ôô 
:
ôô 
$str
ôô .
,
ôô. /
table
õõ 
:
õõ 
$str
õõ 
,
õõ  
column
öö 
:
öö 
$str
öö &
)
öö& '
;
öö' (
migrationBuilder
øø 
.
øø 
CreateIndex
øø (
(
øø( )
name
ùù 
:
ùù 
$str
ùù *
,
ùù* +
table
úú 
:
úú 
$str
úú 
,
úú  
column
ûû 
:
ûû 
$str
ûû "
)
ûû" #
;
ûû# $
migrationBuilder
ýý 
.
ýý 
CreateIndex
ýý (
(
ýý( )
name
þþ 
:
þþ 
$str
þþ /
,
þþ/ 0
table
ÿÿ 
:
ÿÿ 
$str
ÿÿ 
,
ÿÿ  
column
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 /
,
/ 0
table
 
:
 
$str
 
,
  
column
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 ,
,
, -
table
 
:
 
$str
 
,
  
column
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 (
,
( )
table
 
:
 
$str
 
,
  
column
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 2
,
2 3
table
 
:
 
$str
 %
,
% &
column
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 G
,
G H
table
 
:
 
$str
 %
,
% &
column
 
:
 
$str
 9
)
9 :
;
: ;
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 0
,
0 1
table
 
:
 
$str
 %
,
% &
column
 
:
 
$str
 "
)
" #
;
# $
migrationBuilder
   
.
   
CreateIndex
   (
(
  ( )
name
¡¡ 
:
¡¡ 
$str
¡¡ .
,
¡¡. /
table
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢ 
column
££ 
:
££ 
$str
££ '
)
££' (
;
££( )
migrationBuilder
¥¥ 
.
¥¥ 
CreateIndex
¥¥ (
(
¥¥( )
name
¦¦ 
:
¦¦ 
$str
¦¦ <
,
¦¦< =
table
§§ 
:
§§ 
$str
§§ 
,
§§ 
column
¨¨ 
:
¨¨ 
$str
¨¨ 5
,
¨¨5 6
unique
©© 
:
©© 
true
©© 
)
©© 
;
©© 
migrationBuilder
«« 
.
«« 
CreateIndex
«« (
(
««( )
name
¬¬ 
:
¬¬ 
$str
¬¬ -
,
¬¬- .
table
­­ 
:
­­ 
$str
­­ 
,
­­ 
column
®® 
:
®® 
$str
®® &
)
®®& '
;
®®' (
migrationBuilder
°° 
.
°° 
CreateIndex
°° (
(
°°( )
name
±± 
:
±± 
$str
±± )
,
±±) *
table
²² 
:
²² 
$str
²² 
,
²² 
column
³³ 
:
³³ 
$str
³³ "
)
³³" #
;
³³# $
}
´´ 	
	protected
¶¶ 
override
¶¶ 
void
¶¶ 
Down
¶¶  $
(
¶¶$ %
MigrationBuilder
¶¶% 5
migrationBuilder
¶¶6 F
)
¶¶F G
{
·· 	
migrationBuilder
¸¸ 
.
¸¸ 
	DropTable
¸¸ &
(
¸¸& '
name
¹¹ 
:
¹¹ 
$str
¹¹ "
)
¹¹" #
;
¹¹# $
migrationBuilder
»» 
.
»» 
	DropTable
»» &
(
»»& '
name
¼¼ 
:
¼¼ 
$str
¼¼ !
)
¼¼! "
;
¼¼" #
migrationBuilder
¾¾ 
.
¾¾ 
	DropTable
¾¾ &
(
¾¾& '
name
¿¿ 
:
¿¿ 
$str
¿¿ #
)
¿¿# $
;
¿¿$ %
migrationBuilder
ÁÁ 
.
ÁÁ 
	DropTable
ÁÁ &
(
ÁÁ& '
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ '
)
ÂÂ' (
;
ÂÂ( )
migrationBuilder
ÄÄ 
.
ÄÄ 
	DropTable
ÄÄ &
(
ÄÄ& '
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ $
)
ÅÅ$ %
;
ÅÅ% &
migrationBuilder
ÇÇ 
.
ÇÇ 
	DropTable
ÇÇ &
(
ÇÇ& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 
)
ÈÈ 
;
ÈÈ 
migrationBuilder
ÊÊ 
.
ÊÊ 
	DropTable
ÊÊ &
(
ÊÊ& '
name
ËË 
:
ËË 
$str
ËË '
)
ËË' (
;
ËË( )
migrationBuilder
ÍÍ 
.
ÍÍ 
	DropTable
ÍÍ &
(
ÍÍ& '
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
)
ÎÎ 
;
ÎÎ 
migrationBuilder
ÐÐ 
.
ÐÐ 
	DropTable
ÐÐ &
(
ÐÐ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
)
ÑÑ 
;
ÑÑ  
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ 
)
ÔÔ  
;
ÔÔ  !
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
×× 
:
×× 
$str
×× !
)
××! "
;
××" #
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ %
)
ÚÚ% &
;
ÚÚ& '
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ !
)
ÝÝ! "
;
ÝÝ" #
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
àà 
:
àà 
$str
àà 
)
àà 
;
àà 
}
áá 	
}
ââ 
}ãã É&
wE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Migrations\20220202192121_addedPersonImage.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
addedPersonImage )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
	AddColumn		 &
<		& '
int		' *
>		* +
(		+ ,
name

 
:

 
$str

 
,

  
table 
: 
$str 
,  
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
FileName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
MimeType 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
SizeInBytes 
=  !
table" '
.' (
Column( .
<. /
long/ 3
>3 4
(4 5
type5 9
:9 :
$str; C
,C D
nullableE M
:M N
falseO T
)T U
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 0
,0 1
x2 3
=>4 6
x7 8
.8 9
Id9 ;
); <
;< =
} 
) 
; 
migrationBuilder 
. 
CreateIndex (
(( )
name 
: 
$str )
,) *
table   
:   
$str   
,    
column!! 
:!! 
$str!! !
)!!! "
;!!" #
migrationBuilder## 
.## 
AddForeignKey## *
(##* +
name$$ 
:$$ 
$str$$ 0
,$$0 1
table%% 
:%% 
$str%% 
,%%  
column&& 
:&& 
$str&& !
,&&! "
principalTable'' 
:'' 
$str''  (
,''( )
principalColumn(( 
:((  
$str((! %
,((% &
onDelete)) 
:)) 
ReferentialAction)) +
.))+ ,
SetNull)), 3
)))3 4
;))4 5
}** 	
	protected,, 
override,, 
void,, 
Down,,  $
(,,$ %
MigrationBuilder,,% 5
migrationBuilder,,6 F
),,F G
{-- 	
migrationBuilder.. 
... 
DropForeignKey.. +
(..+ ,
name// 
:// 
$str// 0
,//0 1
table00 
:00 
$str00 
)00  
;00  !
migrationBuilder22 
.22 
	DropTable22 &
(22& '
name33 
:33 
$str33 
)33 
;33  
migrationBuilder55 
.55 
	DropIndex55 &
(55& '
name66 
:66 
$str66 )
,66) *
table77 
:77 
$str77 
)77  
;77  !
migrationBuilder99 
.99 

DropColumn99 '
(99' (
name:: 
::: 
$str:: 
,::  
table;; 
:;; 
$str;; 
);;  
;;;  !
}<< 	
}== 
}>> ¤
yE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Migrations\20220323085206_updatedPreferences.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
updatedPreferences +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 

DropColumn		 '
(		' (
name

 
:

 
$str

 *
,

* +
table 
: 
$str 
) 
;  
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str '
,' (
table 
: 
$str 
, 
newName 
: 
$str (
)( )
;) *
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str %
,% &
table 
: 
$str 
, 
newName 
: 
$str *
)* +
;+ ,
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str *
,* +
table 
: 
$str 
, 
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
} 	
}   
}!! ¾&
yE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Migrations\20220402084510_removedGenderTable.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
removedGenderTable +
:, -
	Migration. 7
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
DropForeignKey		 +
(		+ ,
name

 
:

 
$str

 2
,

2 3
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str *
,* +
table 
: 
$str 
)  
;  !
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str 
,  
type 
: 
$str #
,# $
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
} 	
	protected   
override   
void   
Down    $
(  $ %
MigrationBuilder  % 5
migrationBuilder  6 F
)  F G
{!! 	
migrationBuilder"" 
."" 

DropColumn"" '
(""' (
name## 
:## 
$str## 
,## 
table$$ 
:$$ 
$str$$ 
)$$  
;$$  !
migrationBuilder&& 
.&& 
	AddColumn&& &
<&&& '
int&&' *
>&&* +
(&&+ ,
name'' 
:'' 
$str''  
,''  !
table(( 
:(( 
$str(( 
,((  
type)) 
:)) 
$str)) 
,)) 
nullable** 
:** 
true** 
)** 
;**  
migrationBuilder,, 
.,, 
CreateTable,, (
(,,( )
name-- 
:-- 
$str-- 
,--  
columns.. 
:.. 
table.. 
=>.. !
new.." %
{// 
Id00 
=00 
table00 
.00 
Column00 %
<00% &
int00& )
>00) *
(00* +
type00+ /
:00/ 0
$str001 6
,006 7
nullable008 @
:00@ A
false00B G
)00G H
.11 

Annotation11 #
(11# $
$str11$ 8
,118 9
$str11: @
)11@ A
,11A B
Name22 
=22 
table22  
.22  !
Column22! '
<22' (
string22( .
>22. /
(22/ 0
type220 4
:224 5
$str226 E
,22E F
nullable22G O
:22O P
true22Q U
)22U V
}33 
,33 
constraints44 
:44 
table44 "
=>44# %
{55 
table66 
.66 

PrimaryKey66 $
(66$ %
$str66% 1
,661 2
x663 4
=>665 7
x668 9
.669 :
Id66: <
)66< =
;66= >
}77 
)77 
;77 
migrationBuilder99 
.99 
CreateIndex99 (
(99( )
name:: 
::: 
$str:: *
,::* +
table;; 
:;; 
$str;; 
,;;  
column<< 
:<< 
$str<< "
)<<" #
;<<# $
migrationBuilder>> 
.>> 
AddForeignKey>> *
(>>* +
name?? 
:?? 
$str?? 2
,??2 3
table@@ 
:@@ 
$str@@ 
,@@  
columnAA 
:AA 
$strAA "
,AA" #
principalTableBB 
:BB 
$strBB  )
,BB) *
principalColumnCC 
:CC  
$strCC! %
)CC% &
;CC& '
}DD 	
}EE 
}FF ÖÇ
xE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Migrations\20220420195453_addedUserPosition.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 
addedUserPosition *
:+ ,
	Migration- 6
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
	DropTable

 &
(

& '
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
; 
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str "
," #
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Latitude 
= 
table $
.$ %
Column% +
<+ ,
float, 1
>1 2
(2 3
type3 7
:7 8
$str9 ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
	Longitude 
= 
table  %
.% &
Column& ,
<, -
float- 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
LastVerified  
=! "
table# (
.( )
Column) /
</ 0
DateTime0 8
>8 9
(9 :
type: >
:> ?
$str@ K
,K L
nullableM U
:U V
falseW \
)\ ]
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% 2
,""2 3
x""4 5
=>""6 8
x""9 :
."": ;
Id""; =
)""= >
;""> ?
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateTable%% (
(%%( )
name&& 
:&& 
$str&& !
,&&! "
columns'' 
:'' 
table'' 
=>'' !
new''" %
{(( 
Id)) 
=)) 
table)) 
.)) 
Column)) %
<))% &
int))& )
>))) *
())* +
type))+ /
:))/ 0
$str))1 6
,))6 7
nullable))8 @
:))@ A
false))B G
)))G H
.** 

Annotation** #
(**# $
$str**$ 8
,**8 9
$str**: @
)**@ A
,**A B
PrimaryUserId++ !
=++" #
table++$ )
.++) *
Column++* 0
<++0 1
Guid++1 5
>++5 6
(++6 7
type++7 ;
:++; <
$str++= O
,++O P
nullable++Q Y
:++Y Z
false++[ `
)++` a
,++a b
RelativeUserId,, "
=,,# $
table,,% *
.,,* +
Column,,+ 1
<,,1 2
Guid,,2 6
>,,6 7
(,,7 8
type,,8 <
:,,< =
$str,,> P
,,,P Q
nullable,,R Z
:,,Z [
false,,\ a
),,a b
,,,b c)
RelativePersonInPrimaryTreeId-- 1
=--2 3
table--4 9
.--9 :
Column--: @
<--@ A
int--A D
>--D E
(--E F
type--F J
:--J K
$str--L Q
,--Q R
nullable--S [
:--[ \
false--] b
)--b c
}.. 
,.. 
constraints// 
:// 
table// "
=>//# %
{00 
table11 
.11 

PrimaryKey11 $
(11$ %
$str11% 3
,113 4
x115 6
=>117 9
x11: ;
.11; <
Id11< >
)11> ?
;11? @
table22 
.22 

ForeignKey22 $
(22$ %
name33 
:33 
$str33 Q
,33Q R
column44 
:44 
x44  !
=>44" $
x44% &
.44& ')
RelativePersonInPrimaryTreeId44' D
,44D E
principalTable55 &
:55& '
$str55( 0
,550 1
principalColumn66 '
:66' (
$str66) -
)66- .
;66. /
table77 
.77 

ForeignKey77 $
(77$ %
name88 
:88 
$str88 @
,88@ A
column99 
:99 
x99  !
=>99" $
x99% &
.99& '
PrimaryUserId99' 4
,994 5
principalTable:: &
:::& '
$str::( /
,::/ 0
principalColumn;; '
:;;' (
$str;;) -
);;- .
;;;. /
table<< 
.<< 

ForeignKey<< $
(<<$ %
name== 
:== 
$str== A
,==A B
column>> 
:>> 
x>>  !
=>>>" $
x>>% &
.>>& '
RelativeUserId>>' 5
,>>5 6
principalTable?? &
:??& '
$str??( /
,??/ 0
principalColumn@@ '
:@@' (
$str@@) -
)@@- .
;@@. /
}AA 
)AA 
;AA 
migrationBuilderCC 
.CC 
CreateTableCC (
(CC( )
nameDD 
:DD 
$strDD  
,DD  !
columnsEE 
:EE 
tableEE 
=>EE !
newEE" %
{FF 
IdGG 
=GG 
tableGG 
.GG 
ColumnGG %
<GG% &
intGG& )
>GG) *
(GG* +
typeGG+ /
:GG/ 0
$strGG1 6
,GG6 7
nullableGG8 @
:GG@ A
falseGGB G
)GGG H
.HH 

AnnotationHH #
(HH# $
$strHH$ 8
,HH8 9
$strHH: @
)HH@ A
,HHA B
ReceiverRespondedII %
=II& '
tableII( -
.II- .
ColumnII. 4
<II4 5
boolII5 9
>II9 :
(II: ;
typeII; ?
:II? @
$strIIA F
,IIF G
nullableIIH P
:IIP Q
falseIIR W
)IIW X
,IIX Y
ResponseJJ 
=JJ 
tableJJ $
.JJ$ %
ColumnJJ% +
<JJ+ ,
boolJJ, 0
>JJ0 1
(JJ1 2
typeJJ2 6
:JJ6 7
$strJJ8 =
,JJ= >
nullableJJ? G
:JJG H
falseJJI N
)JJN O
,JJO P
SenderIdKK 
=KK 
tableKK $
.KK$ %
ColumnKK% +
<KK+ ,
GuidKK, 0
>KK0 1
(KK1 2
typeKK2 6
:KK6 7
$strKK8 J
,KKJ K
nullableKKL T
:KKT U
falseKKV [
)KK[ \
,KK\ ]

ReceiverIdLL 
=LL  
tableLL! &
.LL& '
ColumnLL' -
<LL- .
GuidLL. 2
>LL2 3
(LL3 4
typeLL4 8
:LL8 9
$strLL: L
,LLL M
nullableLLN V
:LLV W
falseLLX ]
)LL] ^
,LL^ _+
ReceiverReferenceInSenderTreeIdMM 3
=MM4 5
tableMM6 ;
.MM; <
ColumnMM< B
<MMB C
intMMC F
>MMF G
(MMG H
typeMMH L
:MML M
$strMMN S
,MMS T
nullableMMU ]
:MM] ^
falseMM_ d
)MMd e
}NN 
,NN 
constraintsOO 
:OO 
tableOO "
=>OO# %
{PP 
tableQQ 
.QQ 

PrimaryKeyQQ $
(QQ$ %
$strQQ% 2
,QQ2 3
xQQ4 5
=>QQ6 8
xQQ9 :
.QQ: ;
IdQQ; =
)QQ= >
;QQ> ?
tableRR 
.RR 

ForeignKeyRR $
(RR$ %
nameSS 
:SS 
$strSS R
,SSR S
columnTT 
:TT 
xTT  !
=>TT" $
xTT% &
.TT& '+
ReceiverReferenceInSenderTreeIdTT' F
,TTF G
principalTableUU &
:UU& '
$strUU( 0
,UU0 1
principalColumnVV '
:VV' (
$strVV) -
)VV- .
;VV. /
tableWW 
.WW 

ForeignKeyWW $
(WW$ %
nameXX 
:XX 
$strXX <
,XX< =
columnYY 
:YY 
xYY  !
=>YY" $
xYY% &
.YY& '

ReceiverIdYY' 1
,YY1 2
principalTableZZ &
:ZZ& '
$strZZ( /
,ZZ/ 0
principalColumn[[ '
:[[' (
$str[[) -
)[[- .
;[[. /
table\\ 
.\\ 

ForeignKey\\ $
(\\$ %
name]] 
:]] 
$str]] :
,]]: ;
column^^ 
:^^ 
x^^  !
=>^^" $
x^^% &
.^^& '
SenderId^^' /
,^^/ 0
principalTable__ &
:__& '
$str__( /
,__/ 0
principalColumn`` '
:``' (
$str``) -
)``- .
;``. /
}aa 
)aa 
;aa 
migrationBuildercc 
.cc 
CreateIndexcc (
(cc( )
namedd 
:dd 
$strdd +
,dd+ ,
tableee 
:ee 
$stree 
,ee 
columnff 
:ff 
$strff $
)ff$ %
;ff% &
migrationBuilderhh 
.hh 
CreateIndexhh (
(hh( )
nameii 
:ii 
$strii 2
,ii2 3
tablejj 
:jj 
$strjj "
,jj" #
columnkk 
:kk 
$strkk '
)kk' (
;kk( )
migrationBuildermm 
.mm 
CreateIndexmm (
(mm( )
namenn 
:nn 
$strnn B
,nnB C
tableoo 
:oo 
$stroo "
,oo" #
columnpp 
:pp 
$strpp 7
,pp7 8
uniqueqq 
:qq 
trueqq 
)qq 
;qq 
migrationBuilderss 
.ss 
CreateIndexss (
(ss( )
namett 
:tt 
$strtt 3
,tt3 4
tableuu 
:uu 
$struu "
,uu" #
columnvv 
:vv 
$strvv (
)vv( )
;vv) *
migrationBuilderxx 
.xx 
CreateIndexxx (
(xx( )
nameyy 
:yy 
$stryy .
,yy. /
tablezz 
:zz 
$strzz !
,zz! "
column{{ 
:{{ 
$str{{ $
){{$ %
;{{% &
migrationBuilder}} 
.}} 
CreateIndex}} (
(}}( )
name~~ 
:~~ 
$str~~ C
,~~C D
table 
: 
$str !
,! "
column
 
:
 
$str
 9
)
9 :
;
: ;
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 ,
,
, -
table
 
:
 
$str
 !
,
! "
column
 
:
 
$str
 "
)
" #
;
# $
migrationBuilder
 
.
 
AddForeignKey
 *
(
* +
name
 
:
 
$str
 4
,
4 5
table
 
:
 
$str
 
,
 
column
 
:
 
$str
 $
,
$ %
principalTable
 
:
 
$str
  *
,
* +
principalColumn
 
:
  
$str
! %
,
% &
onDelete
 
:
 
ReferentialAction
 +
.
+ ,
Restrict
, 4
)
4 5
;
5 6
}
 	
	protected
 
override
 
void
 
Down
  $
(
$ %
MigrationBuilder
% 5
migrationBuilder
6 F
)
F G
{
 	
migrationBuilder
 
.
 
DropForeignKey
 +
(
+ ,
name
 
:
 
$str
 4
,
4 5
table
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 !
)
! "
;
" #
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
	DropIndex
 &
(
& '
name
   
:
   
$str
   +
,
  + ,
table
¡¡ 
:
¡¡ 
$str
¡¡ 
)
¡¡ 
;
¡¡  
migrationBuilder
££ 
.
££ 

DropColumn
££ '
(
££' (
name
¤¤ 
:
¤¤ 
$str
¤¤ "
,
¤¤" #
table
¥¥ 
:
¥¥ 
$str
¥¥ 
)
¥¥ 
;
¥¥  
migrationBuilder
§§ 
.
§§ 
CreateTable
§§ (
(
§§( )
name
¨¨ 
:
¨¨ 
$str
¨¨ $
,
¨¨$ %
columns
©© 
:
©© 
table
©© 
=>
©© !
new
©©" %
{
ªª 
Id
«« 
=
«« 
table
«« 
.
«« 
Column
«« %
<
««% &
int
««& )
>
««) *
(
««* +
type
««+ /
:
««/ 0
$str
««1 6
,
««6 7
nullable
««8 @
:
««@ A
false
««B G
)
««G H
.
¬¬ 

Annotation
¬¬ #
(
¬¬# $
$str
¬¬$ 8
,
¬¬8 9
$str
¬¬: @
)
¬¬@ A
,
¬¬A B

ReceiverId
­­ 
=
­­  
table
­­! &
.
­­& '
Column
­­' -
<
­­- .
Guid
­­. 2
>
­­2 3
(
­­3 4
type
­­4 8
:
­­8 9
$str
­­: L
,
­­L M
nullable
­­N V
:
­­V W
false
­­X ]
)
­­] ^
,
­­^ _-
ReceiverReferenceInSenderTreeId
®® 3
=
®®4 5
table
®®6 ;
.
®®; <
Column
®®< B
<
®®B C
int
®®C F
>
®®F G
(
®®G H
type
®®H L
:
®®L M
$str
®®N S
,
®®S T
nullable
®®U ]
:
®®] ^
false
®®_ d
)
®®d e
,
®®e f
ReceiverResponded
¯¯ %
=
¯¯& '
table
¯¯( -
.
¯¯- .
Column
¯¯. 4
<
¯¯4 5
bool
¯¯5 9
>
¯¯9 :
(
¯¯: ;
type
¯¯; ?
:
¯¯? @
$str
¯¯A F
,
¯¯F G
nullable
¯¯H P
:
¯¯P Q
false
¯¯R W
)
¯¯W X
,
¯¯X Y
Response
°° 
=
°° 
table
°° $
.
°°$ %
Column
°°% +
<
°°+ ,
bool
°°, 0
>
°°0 1
(
°°1 2
type
°°2 6
:
°°6 7
$str
°°8 =
,
°°= >
nullable
°°? G
:
°°G H
false
°°I N
)
°°N O
,
°°O P
SenderId
±± 
=
±± 
table
±± $
.
±±$ %
Column
±±% +
<
±±+ ,
Guid
±±, 0
>
±±0 1
(
±±1 2
type
±±2 6
:
±±6 7
$str
±±8 J
,
±±J K
nullable
±±L T
:
±±T U
false
±±V [
)
±±[ \
}
²² 
,
²² 
constraints
³³ 
:
³³ 
table
³³ "
=>
³³# %
{
´´ 
table
µµ 
.
µµ 

PrimaryKey
µµ $
(
µµ$ %
$str
µµ% 6
,
µµ6 7
x
µµ8 9
=>
µµ: <
x
µµ= >
.
µµ> ?
Id
µµ? A
)
µµA B
;
µµB C
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
·· 
:
·· 
$str
·· V
,
··V W
column
¸¸ 
:
¸¸ 
x
¸¸  !
=>
¸¸" $
x
¸¸% &
.
¸¸& '-
ReceiverReferenceInSenderTreeId
¸¸' F
,
¸¸F G
principalTable
¹¹ &
:
¹¹& '
$str
¹¹( 0
,
¹¹0 1
principalColumn
ºº '
:
ºº' (
$str
ºº) -
)
ºº- .
;
ºº. /
table
»» 
.
»» 

ForeignKey
»» $
(
»»$ %
name
¼¼ 
:
¼¼ 
$str
¼¼ @
,
¼¼@ A
column
½½ 
:
½½ 
x
½½  !
=>
½½" $
x
½½% &
.
½½& '

ReceiverId
½½' 1
,
½½1 2
principalTable
¾¾ &
:
¾¾& '
$str
¾¾( /
,
¾¾/ 0
principalColumn
¿¿ '
:
¿¿' (
$str
¿¿) -
)
¿¿- .
;
¿¿. /
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ >
,
ÁÁ> ?
column
ÂÂ 
:
ÂÂ 
x
ÂÂ  !
=>
ÂÂ" $
x
ÂÂ% &
.
ÂÂ& '
SenderId
ÂÂ' /
,
ÂÂ/ 0
principalTable
ÃÃ &
:
ÃÃ& '
$str
ÃÃ( /
,
ÃÃ/ 0
principalColumn
ÄÄ '
:
ÄÄ' (
$str
ÄÄ) -
)
ÄÄ- .
;
ÄÄ. /
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
migrationBuilder
ÇÇ 
.
ÇÇ 
CreateTable
ÇÇ (
(
ÇÇ( )
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 
,
ÈÈ 
columns
ÉÉ 
:
ÉÉ 
table
ÉÉ 
=>
ÉÉ !
new
ÉÉ" %
{
ÊÊ 
Id
ËË 
=
ËË 
table
ËË 
.
ËË 
Column
ËË %
<
ËË% &
int
ËË& )
>
ËË) *
(
ËË* +
type
ËË+ /
:
ËË/ 0
$str
ËË1 6
,
ËË6 7
nullable
ËË8 @
:
ËË@ A
false
ËËB G
)
ËËG H
.
ÌÌ 

Annotation
ÌÌ #
(
ÌÌ# $
$str
ÌÌ$ 8
,
ÌÌ8 9
$str
ÌÌ: @
)
ÌÌ@ A
,
ÌÌA B
PrimaryUserId
ÍÍ !
=
ÍÍ" #
table
ÍÍ$ )
.
ÍÍ) *
Column
ÍÍ* 0
<
ÍÍ0 1
Guid
ÍÍ1 5
>
ÍÍ5 6
(
ÍÍ6 7
type
ÍÍ7 ;
:
ÍÍ; <
$str
ÍÍ= O
,
ÍÍO P
nullable
ÍÍQ Y
:
ÍÍY Z
false
ÍÍ[ `
)
ÍÍ` a
,
ÍÍa b)
SyncedPersonInPrimaryTreeId
ÎÎ /
=
ÎÎ0 1
table
ÎÎ2 7
.
ÎÎ7 8
Column
ÎÎ8 >
<
ÎÎ> ?
int
ÎÎ? B
>
ÎÎB C
(
ÎÎC D
type
ÎÎD H
:
ÎÎH I
$str
ÎÎJ O
,
ÎÎO P
nullable
ÎÎQ Y
:
ÎÎY Z
false
ÎÎ[ `
)
ÎÎ` a
,
ÎÎa b
SyncedUserId
ÏÏ  
=
ÏÏ! "
table
ÏÏ# (
.
ÏÏ( )
Column
ÏÏ) /
<
ÏÏ/ 0
Guid
ÏÏ0 4
>
ÏÏ4 5
(
ÏÏ5 6
type
ÏÏ6 :
:
ÏÏ: ;
$str
ÏÏ< N
,
ÏÏN O
nullable
ÏÏP X
:
ÏÏX Y
false
ÏÏZ _
)
ÏÏ_ `
,
ÏÏ` a
SynchedUserId
ÐÐ !
=
ÐÐ" #
table
ÐÐ$ )
.
ÐÐ) *
Column
ÐÐ* 0
<
ÐÐ0 1
Guid
ÐÐ1 5
>
ÐÐ5 6
(
ÐÐ6 7
type
ÐÐ7 ;
:
ÐÐ; <
$str
ÐÐ= O
,
ÐÐO P
nullable
ÐÐQ Y
:
ÐÐY Z
true
ÐÐ[ _
)
ÐÐ_ `
}
ÑÑ 
,
ÑÑ 
constraints
ÒÒ 
:
ÒÒ 
table
ÒÒ "
=>
ÒÒ# %
{
ÓÓ 
table
ÔÔ 
.
ÔÔ 

PrimaryKey
ÔÔ $
(
ÔÔ$ %
$str
ÔÔ% /
,
ÔÔ/ 0
x
ÔÔ1 2
=>
ÔÔ3 5
x
ÔÔ6 7
.
ÔÔ7 8
Id
ÔÔ8 :
)
ÔÔ: ;
;
ÔÔ; <
table
ÕÕ 
.
ÕÕ 

ForeignKey
ÕÕ $
(
ÕÕ$ %
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ K
,
ÖÖK L
column
×× 
:
×× 
x
××  !
=>
××" $
x
××% &
.
××& ')
SyncedPersonInPrimaryTreeId
××' B
,
××B C
principalTable
ØØ &
:
ØØ& '
$str
ØØ( 0
,
ØØ0 1
principalColumn
ÙÙ '
:
ÙÙ' (
$str
ÙÙ) -
)
ÙÙ- .
;
ÙÙ. /
table
ÚÚ 
.
ÚÚ 

ForeignKey
ÚÚ $
(
ÚÚ$ %
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ <
,
ÛÛ< =
column
ÜÜ 
:
ÜÜ 
x
ÜÜ  !
=>
ÜÜ" $
x
ÜÜ% &
.
ÜÜ& '
PrimaryUserId
ÜÜ' 4
,
ÜÜ4 5
principalTable
ÝÝ &
:
ÝÝ& '
$str
ÝÝ( /
,
ÝÝ/ 0
principalColumn
ÞÞ '
:
ÞÞ' (
$str
ÞÞ) -
)
ÞÞ- .
;
ÞÞ. /
table
ßß 
.
ßß 

ForeignKey
ßß $
(
ßß$ %
name
àà 
:
àà 
$str
àà ;
,
àà; <
column
áá 
:
áá 
x
áá  !
=>
áá" $
x
áá% &
.
áá& '
SyncedUserId
áá' 3
,
áá3 4
principalTable
ââ &
:
ââ& '
$str
ââ( /
,
ââ/ 0
principalColumn
ãã '
:
ãã' (
$str
ãã) -
)
ãã- .
;
ãã. /
}
ää 
)
ää 
;
ää 
migrationBuilder
ææ 
.
ææ 
CreateIndex
ææ (
(
ææ( )
name
çç 
:
çç 
$str
çç 2
,
çç2 3
table
èè 
:
èè 
$str
èè %
,
èè% &
column
éé 
:
éé 
$str
éé $
)
éé$ %
;
éé% &
migrationBuilder
ëë 
.
ëë 
CreateIndex
ëë (
(
ëë( )
name
ìì 
:
ìì 
$str
ìì G
,
ììG H
table
íí 
:
íí 
$str
íí %
,
íí% &
column
îî 
:
îî 
$str
îî 9
)
îî9 :
;
îî: ;
migrationBuilder
ðð 
.
ðð 
CreateIndex
ðð (
(
ðð( )
name
ññ 
:
ññ 
$str
ññ 0
,
ññ0 1
table
òò 
:
òò 
$str
òò %
,
òò% &
column
óó 
:
óó 
$str
óó "
)
óó" #
;
óó# $
migrationBuilder
õõ 
.
õõ 
CreateIndex
õõ (
(
õõ( )
name
öö 
:
öö 
$str
öö .
,
öö. /
table
÷÷ 
:
÷÷ 
$str
÷÷ 
,
÷÷ 
column
øø 
:
øø 
$str
øø '
)
øø' (
;
øø( )
migrationBuilder
úú 
.
úú 
CreateIndex
úú (
(
úú( )
name
ûû 
:
ûû 
$str
ûû <
,
ûû< =
table
üü 
:
üü 
$str
üü 
,
üü 
column
ýý 
:
ýý 
$str
ýý 5
,
ýý5 6
unique
þþ 
:
þþ 
true
þþ 
)
þþ 
;
þþ 
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 -
,
- .
table
 
:
 
$str
 
,
 
column
 
:
 
$str
 &
)
& '
;
' (
}
 	
}
 
} ÃF
E:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Migrations\20220602121132_addedCreationAndModificationTimeStamps.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 

Migrations '
{ 
public 

partial 
class 2
&addedCreationAndModificationTimeStamps ?
:@ A
	MigrationB K
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 

DropColumn

 '
(

' (
name 
: 
$str %
,% &
table 
: 
$str 
) 
;  
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str !
)! "
;" #
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str "
," #
table 
: 
$str 
,  
newName 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str %
,% &
table 
: 
$str "
," #
type 
: 
$str !
,! "
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str !
,! "
table   
:   
$str   !
,  ! "
type!! 
:!! 
$str!! !
,!!! "
nullable"" 
:"" 
true"" 
)"" 
;""  
migrationBuilder$$ 
.$$ 
	AddColumn$$ &
<$$& '
DateTime$$' /
>$$/ 0
($$0 1
name%% 
:%% 
$str%% "
,%%" #
table&& 
:&& 
$str&& 
,&&  
type'' 
:'' 
$str'' !
,''! "
nullable(( 
:(( 
true(( 
)(( 
;((  
migrationBuilder** 
.** 
	AddColumn** &
<**& '
DateTime**' /
>**/ 0
(**0 1
name++ 
:++ 
$str++ !
,++! "
table,, 
:,, 
$str,, (
,,,( )
type-- 
:-- 
$str-- !
,--! "
nullable.. 
:.. 
false.. 
,..  
defaultValue// 
:// 
new// !
DateTime//" *
(//* +
$num//+ ,
,//, -
$num//. /
,/// 0
$num//1 2
,//2 3
$num//4 5
,//5 6
$num//7 8
,//8 9
$num//: ;
,//; <
$num//= >
,//> ?
DateTimeKind//@ L
.//L M
Unspecified//M X
)//X Y
)//Y Z
;//Z [
migrationBuilder11 
.11 
	AddColumn11 &
<11& '
DateTime11' /
>11/ 0
(110 1
name22 
:22 
$str22 "
,22" #
table33 
:33 
$str33 (
,33( )
type44 
:44 
$str44 !
,44! "
nullable55 
:55 
true55 
)55 
;55  
migrationBuilder77 
.77 
	AddColumn77 &
<77& '
DateTime77' /
>77/ 0
(770 1
name88 
:88 
$str88 !
,88! "
table99 
:99 
$str99 "
,99" #
type:: 
::: 
$str:: !
,::! "
nullable;; 
:;; 
false;; 
,;;  
defaultValue<< 
:<< 
new<< !
DateTime<<" *
(<<* +
$num<<+ ,
,<<, -
$num<<. /
,<</ 0
$num<<1 2
,<<2 3
$num<<4 5
,<<5 6
$num<<7 8
,<<8 9
$num<<: ;
,<<; <
$num<<= >
,<<> ?
DateTimeKind<<@ L
.<<L M
Unspecified<<M X
)<<X Y
)<<Y Z
;<<Z [
migrationBuilder>> 
.>> 
	AddColumn>> &
<>>& '
DateTime>>' /
>>>/ 0
(>>0 1
name?? 
:?? 
$str?? "
,??" #
table@@ 
:@@ 
$str@@ "
,@@" #
typeAA 
:AA 
$strAA !
,AA! "
nullableBB 
:BB 
trueBB 
)BB 
;BB  
}CC 	
	protectedEE 
overrideEE 
voidEE 
DownEE  $
(EE$ %
MigrationBuilderEE% 5
migrationBuilderEE6 F
)EEF G
{FF 	
migrationBuilderGG 
.GG 

DropColumnGG '
(GG' (
nameHH 
:HH 
$strHH %
,HH% &
tableII 
:II 
$strII "
)II" #
;II# $
migrationBuilderKK 
.KK 

DropColumnKK '
(KK' (
nameLL 
:LL 
$strLL !
,LL! "
tableMM 
:MM 
$strMM !
)MM! "
;MM" #
migrationBuilderOO 
.OO 

DropColumnOO '
(OO' (
namePP 
:PP 
$strPP "
,PP" #
tableQQ 
:QQ 
$strQQ 
)QQ  
;QQ  !
migrationBuilderSS 
.SS 

DropColumnSS '
(SS' (
nameTT 
:TT 
$strTT !
,TT! "
tableUU 
:UU 
$strUU (
)UU( )
;UU) *
migrationBuilderWW 
.WW 

DropColumnWW '
(WW' (
nameXX 
:XX 
$strXX "
,XX" #
tableYY 
:YY 
$strYY (
)YY( )
;YY) *
migrationBuilder[[ 
.[[ 

DropColumn[[ '
([[' (
name\\ 
:\\ 
$str\\ !
,\\! "
table]] 
:]] 
$str]] "
)]]" #
;]]# $
migrationBuilder__ 
.__ 

DropColumn__ '
(__' (
name`` 
:`` 
$str`` "
,``" #
tableaa 
:aa 
$straa "
)aa" #
;aa# $
migrationBuildercc 
.cc 
RenameColumncc )
(cc) *
namedd 
:dd 
$strdd !
,dd! "
tableee 
:ee 
$stree 
,ee  
newNameff 
:ff 
$strff %
)ff% &
;ff& '
migrationBuilderhh 
.hh 
	AddColumnhh &
<hh& '
DateTimehh' /
>hh/ 0
(hh0 1
nameii 
:ii 
$strii %
,ii% &
tablejj 
:jj 
$strjj 
,jj 
typekk 
:kk 
$strkk !
,kk! "
nullablell 
:ll 
truell 
)ll 
;ll  
migrationBuildernn 
.nn 
	AddColumnnn &
<nn& '
DateTimenn' /
>nn/ 0
(nn0 1
nameoo 
:oo 
$stroo $
,oo$ %
tablepp 
:pp 
$strpp !
,pp! "
typeqq 
:qq 
$strqq !
,qq! "
nullablerr 
:rr 
falserr 
,rr  
defaultValuess 
:ss 
newss !
DateTimess" *
(ss* +
$numss+ ,
,ss, -
$numss. /
,ss/ 0
$numss1 2
,ss2 3
$numss4 5
,ss5 6
$numss7 8
,ss8 9
$numss: ;
,ss; <
$numss= >
,ss> ?
DateTimeKindss@ L
.ssL M
UnspecifiedssM X
)ssX Y
)ssY Z
;ssZ [
}tt 	
}uu 
}vv ¥
rE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\EducationLevelRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class $
EducationLevelRepository )
:* +
RepositoryBase, :
<: ;
EducationLevel; I
>I J
,J K%
IEducationLevelRepositoryL e
{ 
public $
EducationLevelRepository '
(' ("
GenealogyTreeDbContext( >
repositoryContext? P
)P Q
:R S
baseT X
(X Y
repositoryContextY j
)j k
{		 	
}

 	
} 
} 
mE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\EducationRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
EducationRepository $
:% &
RepositoryBase' 5
<5 6
	Education6 ?
>? @
,@ A 
IEducationRepositoryB V
{ 
public 
EducationRepository "
(" #"
GenealogyTreeDbContext# 9
repositoryContext: K
)K L
:M N
baseO S
(S T
repositoryContextT e
)e f
{		 	
}

 	
} 
} ø
iE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\ImageRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
ImageRepository  
:! "
RepositoryBase# 1
<1 2
Image2 7
>7 8
,8 9
IImageRepository: J
{ 
public 
ImageRepository 
( "
GenealogyTreeDbContext 5
repositoryContext6 G
)G H
:I J
baseK O
(O P
repositoryContextP a
)a b
{c d
}e f
}		 
}

 
lE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\LocationRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
LocationRepository #
:$ %
RepositoryBase& 4
<4 5
Location5 =
>= >
,> ?
ILocationRepository@ S
{ 
public 
LocationRepository !
(! ""
GenealogyTreeDbContext" 8
repositoryContext9 J
)J K
:L M
baseN R
(R S
repositoryContextS d
)d e
{		 	
}

 	
} 
} 
lE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\MarriageRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
MarriageRepository #
:$ %
RepositoryBase& 4
<4 5
Marriage5 =
>= >
,> ?
IMarriageRepository@ S
{ 
public 
MarriageRepository !
(! ""
GenealogyTreeDbContext" 8
repositoryContext9 J
)J K
:L M
baseN R
(R S
repositoryContextS d
)d e
{		 	
}

 	
} 
} 
oE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\NationalityRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class !
NationalityRepository &
:' (
RepositoryBase) 7
<7 8
Nationality8 C
>C D
,D E"
INationalityRepositoryF \
{ 
public !
NationalityRepository $
($ %"
GenealogyTreeDbContext% ;
repositoryContext< M
)M N
:O P
baseQ U
(U V
repositoryContextV g
)g h
{		 	
}

 	
} 
} 
nE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\OccupationRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class  
OccupationRepository %
:& '
RepositoryBase( 6
<6 7

Occupation7 A
>A B
,B C!
IOccupationRepositoryD Y
{ 
public  
OccupationRepository #
(# $"
GenealogyTreeDbContext$ :
repositoryContext; L
)L M
:N O
baseP T
(T U
repositoryContextU f
)f g
{		 	
}

 	
} 
} 
oE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\ParentChildRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class !
ParentChildRepository &
:' (
RepositoryBase) 7
<7 8
ParentChild8 C
>C D
,D E"
IParentChildRepositoryF \
{ 
public !
ParentChildRepository $
($ %"
GenealogyTreeDbContext% ;
repositoryContext< M
)M N
:O P
baseQ U
(U V
repositoryContextV g
)g h
{		 	
}

 	
} 
} ý
jE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\PersonRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
PersonRepository !
:" #
RepositoryBase$ 2
<2 3
Person3 9
>9 :
,: ;
IPersonRepository< M
{ 
public 
PersonRepository 
(  "
GenealogyTreeDbContext  6
repositoryContext7 H
)H I
:J K
baseL P
(P Q
repositoryContextQ b
)b c
{		 	
}

 	
} 
} 
lE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\PositionRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
PositionRepository #
:$ %
RepositoryBase& 4
<4 5
Position5 =
>= >
,> ?
IPositionRepository@ S
{ 
public 
PositionRepository !
(! ""
GenealogyTreeDbContext" 8
repositoryContext9 J
)J K
:L M
baseN R
(R S
repositoryContextS d
)d e
{		 	
}

 	
} 
} 
lE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\RelativeRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
RelativeRepository #
:$ %
RepositoryBase& 4
<4 5
Relative5 =
>= >
,> ?
IRelativeRepository@ S
{ 
public 
RelativeRepository !
(! ""
GenealogyTreeDbContext" 8
repositoryContext9 J
)J K
:L M
baseN R
(R S
repositoryContextS d
)d e
{		 	
}

 	
} 
} 
lE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\ReligionRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
ReligionRepository #
:$ %
RepositoryBase& 4
<4 5
Religion5 =
>= >
,> ?
IReligionRepository@ S
{ 
public 
ReligionRepository !
(! ""
GenealogyTreeDbContext" 8
repositoryContext9 J
)J K
:L M
baseN R
(R S
repositoryContextS d
)d e
{		 	
}

 	
} 
} Á.
hE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\RepositoryBase.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{		 
public

 

abstract

 
class

 
RepositoryBase

 (
<

( )
T

) *
>

* +
:

, -
IRepositoryBase

. =
<

= >
T

> ?
>

? @
where

A F
T

G H
:

I J
class

K P
{ 
private 
bool 
disposed 
= 
false  %
;% &
	protected "
GenealogyTreeDbContext (
Context) 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
	protected 
RepositoryBase  
(  !"
GenealogyTreeDbContext! 7
context8 ?
)? @
{ 	
Context 
= 
context 
; 
} 	
	protected 
DbSet 
< 
T 
> 
DbSet  
{ 	
get 
{ 
return 
Context  
.  !
Set! $
<$ %
T% &
>& '
(' (
)( )
;) *
}+ ,
} 	
public 
virtual 
int 
Count  
{ 	
get 
{ 
return 
	Queryable "
." #
Count# (
(( )
DbSet) .
). /
;/ 0
}1 2
} 	
public!! 

IQueryable!! 
<!! 
T!! 
>!! 
GetAll!! #
(!!# $
)!!$ %
{"" 	
return## 
DbSet## 
.## 
AsNoTracking## %
(##% &
)##& '
;##' (
}$$ 	
public&& 

IQueryable&& 
<&& 
T&& 
>&& 
Filter&& #
(&&# $

Expression&&$ .
<&&. /
Func&&/ 3
<&&3 4
T&&4 5
,&&5 6
bool&&7 ;
>&&; <
>&&< =

expression&&> H
)&&H I
{'' 	
return(( 
DbSet(( 
.(( 
Where(( 
((( 

expression(( )
)(() *
.((* +
AsNoTracking((+ 7
(((7 8
)((8 9
;((9 :
})) 	
public++ 
async++ 
Task++ 
<++ 
T++ 
>++ 
FindById++ %
(++% &
params++& ,
object++- 3
[++3 4
]++4 5
keys++6 :
)++: ;
{,, 	
return-- 
await-- 
DbSet-- 
.-- 
	FindAsync-- (
(--( )
keys--) -
)--- .
;--. /
}.. 	
public22 
async22 
Task22 
<22 
T22 
>22 
Create22 #
(22# $
T22$ %
entity22& ,
)22, -
{33 	
DbSet44 
.44 
Add44 
(44 
entity44 
)44 
;44 
await55 
Context55 
.55 
SaveChangesAsync55 *
(55* +
)55+ ,
;55, -
return66 
entity66 
;66 
}77 	
public99 
async99 
Task99 
<99 
T99 
>99 
Update99 #
(99# $
T99$ %
entity99& ,
)99, -
{:: 	
Context;; 
.;; 
Entry;; 
(;; 
entity;;  
);;  !
.;;! "
State;;" '
=;;( )
EntityState;;* 5
.;;5 6
Modified;;6 >
;;;> ?
await<< 
Context<< 
.<< 
SaveChangesAsync<< *
(<<* +
)<<+ ,
;<<, -
return== 
entity== 
;== 
}>> 	
public@@ 
async@@ 
Task@@ 
<@@ 
T@@ 
>@@ 
Delete@@ #
(@@# $
params@@$ *
object@@+ 1
[@@1 2
]@@2 3
id@@4 6
)@@6 7
{AA 	
varBB 
entityBB 
=BB 
awaitBB 
DbSetBB $
.BB$ %
	FindAsyncBB% .
(BB. /
idBB/ 1
)BB1 2
;BB2 3
ifCC 
(CC 
entityCC 
==CC 
nullCC 
)CC 
{DD 
returnEE 
entityEE 
;EE 
}FF 
DbSetHH 
.HH 
RemoveHH 
(HH 
entityHH 
)HH  
;HH  !
awaitII 
ContextII 
.II 
SaveChangesAsyncII *
(II* +
)II+ ,
;II, -
returnJJ 
entityJJ 
;JJ 
}KK 	
	protectedMM 
virtualMM 
voidMM 
DisposeMM &
(MM& '
boolMM' +
	disposingMM, 5
)MM5 6
{NN 	
ifOO 
(OO 
!OO 
disposedOO 
&&OO 
	disposingOO &
)OO& '
{PP 
ContextQQ 
.QQ 
DisposeQQ 
(QQ  
)QQ  !
;QQ! "
}RR 
disposedSS 
=SS 
trueSS 
;SS 
}TT 	
publicVV 
voidVV 
DisposeVV 
(VV 
)VV 
{WW 	
DisposeXX 
(XX 
trueXX 
)XX 
;XX 
GCYY 
.YY 
SuppressFinalizeYY 
(YY  
thisYY  $
)YY$ %
;YY% &
}ZZ 	
}\\ 
}]] 
kE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\RequestRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
RequestRepository "
:# $
RepositoryBase% 3
<3 4
Request4 ;
>; <
,< =
IRequestRepository> P
{ 
public 
RequestRepository  
(  !"
GenealogyTreeDbContext! 7
repositoryContext8 I
)I J
:K L
baseM Q
(Q R
repositoryContextR c
)c d
{		 	
}

 	
} 
} ó
hE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\TreeRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
TreeRepository 
:  !
RepositoryBase" 0
<0 1
Tree1 5
>5 6
,6 7
ITreeRepository8 G
{ 
public 
TreeRepository 
( "
GenealogyTreeDbContext 4
repositoryContext5 F
)F G
:H I
baseJ N
(N O
repositoryContextO `
)` a
{		 	
}

 	
} 
} ó
hE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\Repositories\UserRepository.cs
	namespace 	
GenealogyTree
 
. 
Data 
. 
Repositories )
{ 
public 

class 
UserRepository 
:  !
RepositoryBase" 0
<0 1
User1 5
>5 6
,6 7
IUserRepository8 G
{ 
public 
UserRepository 
( "
GenealogyTreeDbContext 4
repositoryContext5 F
)F G
:H I
baseJ N
(N O
repositoryContextO `
)` a
{		 	
}

 	
} 
} ä-
WE:\Facultate\Licence\Genealogy-Tree\genealogy-tree-API\GenealogyTree.Data\UnitOfWork.cs
	namespace 	
GenealogyTree
 
. 
Data 
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private		 
readonly		 "
GenealogyTreeDbContext		 /
_repoContext		0 <
;		< =
private

 %
IEducationLevelRepository

 )
_educationLevel

* 9
;

9 :
private  
IEducationRepository $

_education% /
;/ 0
private 
IImageRepository  
_image! '
;' (
private 
ILocationRepository #
	_location$ -
;- .
private 
IMarriageRepository #
	_marriage$ -
;- .
private "
INationalityRepository &
_nationality' 3
;3 4
private !
IOccupationRepository %
_occupation& 1
;1 2
private "
IParentChildRepository &
_parentChild' 3
;3 4
private 
IPersonRepository !
_person" )
;) *
private 
IPositionRepository #
	_position$ -
;- .
private 
IReligionRepository #
	_religion$ -
;- .
private 
IRelativeRepository #
	_relative$ -
;- .
private 
IRequestRepository "
_request# +
;+ ,
private 
ITreeRepository 
_tree  %
;% &
private 
IUserRepository 
_user  %
;% &
public 

UnitOfWork 
( "
GenealogyTreeDbContext 0
repositoryContext1 B
)B C
{ 	
_repoContext 
= 
repositoryContext ,
;, -
} 	
public %
IEducationLevelRepository (
EducationLevel) 7
=>8 :
_educationLevel; J
??=K N
newO R$
EducationLevelRepositoryS k
(k l
_repoContextl x
)x y
;y z
public    
IEducationRepository   #
	Education  $ -
=>  . 0

_education  1 ;
??=  < ?
new  @ C
EducationRepository  D W
(  W X
_repoContext  X d
)  d e
;  e f
public!! 
IImageRepository!! 
Image!!  %
=>!!& (
_image!!) /
??=!!0 3
new!!4 7
ImageRepository!!8 G
(!!G H
_repoContext!!H T
)!!T U
;!!U V
public"" 
ILocationRepository"" "
Location""# +
=>"", .
	_location""/ 8
??=""9 <
new""= @
LocationRepository""A S
(""S T
_repoContext""T `
)""` a
;""a b
public## 
IMarriageRepository## "
Marriage### +
=>##, .
	_marriage##/ 8
??=##9 <
new##= @
MarriageRepository##A S
(##S T
_repoContext##T `
)##` a
;##a b
public$$ "
INationalityRepository$$ %
Nationality$$& 1
=>$$2 4
_nationality$$5 A
??=$$B E
new$$F I!
NationalityRepository$$J _
($$_ `
_repoContext$$` l
)$$l m
;$$m n
public%% !
IOccupationRepository%% $

Occupation%%% /
=>%%0 2
_occupation%%3 >
??=%%? B
new%%C F 
OccupationRepository%%G [
(%%[ \
_repoContext%%\ h
)%%h i
;%%i j
public&& "
IParentChildRepository&& %
ParentChild&&& 1
=>&&2 4
_parentChild&&5 A
??=&&B E
new&&F I!
ParentChildRepository&&J _
(&&_ `
_repoContext&&` l
)&&l m
;&&m n
public'' 
IPersonRepository''  
Person''! '
=>''( *
_person''+ 2
??=''3 6
new''7 :
PersonRepository''; K
(''K L
_repoContext''L X
)''X Y
;''Y Z
public(( 
IPositionRepository(( "
Position((# +
=>((, .
	_position((/ 8
??=((9 <
new((= @
PositionRepository((A S
(((S T
_repoContext((T `
)((` a
;((a b
public)) 
IReligionRepository)) "
Religion))# +
=>)), .
	_religion))/ 8
??=))9 <
new))= @
ReligionRepository))A S
())S T
_repoContext))T `
)))` a
;))a b
public** 
IRelativeRepository** "
	Relatives**# ,
=>**- /
	_relative**0 9
??=**: =
new**> A
RelativeRepository**B T
(**T U
_repoContext**U a
)**a b
;**b c
public++ 
IRequestRepository++ !
Requests++" *
=>+++ -
_request++. 6
??=++7 :
new++; >
RequestRepository++? P
(++P Q
_repoContext++Q ]
)++] ^
;++^ _
public,, 
ITreeRepository,, 
Tree,, #
=>,,$ &
_tree,,' ,
??=,,- 0
new,,1 4
TreeRepository,,5 C
(,,C D
_repoContext,,D P
),,P Q
;,,Q R
public-- 
IUserRepository-- 
User-- #
=>--$ &
_user--' ,
??=--- 0
new--1 4
UserRepository--5 C
(--C D
_repoContext--D P
)--P Q
;--Q R
}.. 
}// 